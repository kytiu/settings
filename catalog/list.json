{
    "num": 178,
    "designs": [
        {
            "id": "763954",
            "group_id": "763953",
            "revision": 8,
            "title": "Agilex™ 7 FPGA - Nios® V/m Processor OCM to OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "22.4",
            "devkit": "Intel Agilex® F-Series FPGA Development Kit DK-DEV-AGF014EA",
            "description": "This design example shows on-chip memory (OCM) access using the Nios® V processor.",
            "rich_description": "<p>The Nios V Processor IP communicates with the on-chip RAM and reads/writes to specific memory locations as specified in code.&nbsp;&nbsp;</p><p>The UART IP then prints the necessary statements.&nbsp;</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/843875/0EM2f0000006m8B.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763954/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763954?explicitVersion=true&fileName=aglx_niosv_ocm_mem_transfer.par",
            "first_file_in_uam": "aglx_niosv_ocm_mem_transfer.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763954?explicitVersion=true&fileName=aglx_niosv_ocm_mem_transfer.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763956",
            "group_id": "763955",
            "revision": 8,
            "title": "Agilex™ 7 FPGA - Nios® V Processor with DMA and OCM Design Examplexample",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "22.4",
            "devkit": "Intel Agilex® F-Series FPGA Development Kit DK-DEV-AGF014EA",
            "description": "This design example demonstrates a data transfer between two on-chip memory (OCM) blocks mapped to the Nios® V processor via direct memory access (DMA).",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/843892/0EM2f0000006m8k.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763956/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763956?explicitVersion=true&fileName=niosv_dma_ocm_to_ocm.par",
            "first_file_in_uam": "niosv_dma_ocm_to_ocm.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763956?explicitVersion=true&fileName=niosv_dma_ocm_to_ocm.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763958",
            "group_id": "763957",
            "revision": 11,
            "title": "Agilex™ 7 FPGA - Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "22.4",
            "devkit": "Intel Agilex® F-Series FPGA Development Kit DK-DEV-AGF014EA",
            "description": "Nios® V processor-based \"Hello World\" design example on Intel Agilex® 7 FPGAs.",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763958/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763958?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763958?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763960",
            "group_id": "763959",
            "revision": 6,
            "title": "Arria® 10 FPGA - Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "22.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "Nios® V processor-based \"Hello World\" design example on an Intel® Arria® 10 FPGA development kit.",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850754/0EM2f0000006mlX.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763960/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763960?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763960?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763962",
            "group_id": "763961",
            "revision": 5,
            "title": "Stratix® 10 FPGA - Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "22.4",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "This is a Nios® V processor-based \"Hello World\" design example on an Intel® Stratix® 10 FPGA development kit.",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850756/0EM2f0000006mlr.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763962/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763962?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763962?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763964",
            "group_id": "763963",
            "revision": 5,
            "title": "Stratix® 10 FPGA - SDM Bootloader for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "22.4",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V processor application copied from configuration QSPI flash to RAM using a boot copier (Secure Device Manager (SDM) bootloader)",
            "rich_description": "<p>The&nbsp;Nios&nbsp;V processor starts executing the boot copier upon system reset, which copies the&nbsp;</p><p>application from the configuration QSPI to the internal&nbsp;RAM. Once this&nbsp;</p><p>completes, the&nbsp;Nios&nbsp;V processor transfers the program control over to the application.&nbsp;</p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850744/0EM2f0000006mlI.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Mailbox Client Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763964/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763964?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763964?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763966",
            "group_id": "763965",
            "revision": 5,
            "title": "Arria® 10 FPGA - Bootloader GSFI for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "22.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "Nios® V processor application copied from configuration QSPI flash to RAM using a boot copier (GSFI bootloader)",
            "rich_description": "<p>The GSFI bootloader is the Nios V processor boot copier that supports QSPI flash</p><p>memory in control block-based devices. The GSFI bootloader includes the following</p><p>features:</p><p>• Locates the software application in non-volatile memory.</p><p>• Unpacks and copies the software application image to RAM.</p><p>• Automatically switches processor execution to application code in RAM after copy</p><p>completes.</p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850746/0EM2f0000006mlD.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Generic Serial Flash Interface Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763966/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763966?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763966?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763968",
            "group_id": "763967",
            "revision": 5,
            "title": "Arria® 10 FPGA - Simple Socket Server for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "22.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "This design example demonstrates the communication with a telnet client on a development host PC.",
            "rich_description": "<p>The telnet client offers a convenient way of issuing</p><p>commands over a TCP/IP socket to the Ethernet-connected μC/TCP-IP running</p><p>on the development board with a simple TCP/IP socket server example.</p><p>The socket server example receives commands sent over a TCP/IP connection</p><p>and turns LEDs on and off according to the commands. The example consists</p><p>of a socket server task that listens for commands on a TCP/IP port and</p><p>dispatches those commands to a set of LED management tasks.</p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850748/0EM2f0000006mlN.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "Transceiver ATX PLL Intel Arria 10/Cyclone 10 FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763968/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763968?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763968?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763970",
            "group_id": "763969",
            "revision": 5,
            "title": "Arria® 10 FPGA – μC/OS - II* RTOS with IPerf for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA – μC/OS",
            "quartus_version": "22.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "This Nios® V processor-based design incorporates the μC/IPerf, an IPerf 2 server or client developed for the μC/TCP-IP Stack and the μC/OS-II* RTOS.",
            "rich_description": "<p>Perf&nbsp;2 is a&nbsp;benchmarking tool for measuring performance between two systems, and it&nbsp;can be used as a server or a client.&nbsp;</p><p>An&nbsp;iPerf&nbsp;server receives&nbsp;iPerf&nbsp;request sent over a TCP/IP connection from any&nbsp;iPerf&nbsp;clients, and runs the&nbsp;iPerf&nbsp;test according to the provided arguments.&nbsp;&nbsp;</p><p>Each&nbsp;test reports the bandwidth, loss and other parameters.&nbsp;</p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850750/0EM2f0000006mlS.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "altera_msgdma"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763970/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763970?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763970?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763972",
            "group_id": "763971",
            "revision": 6,
            "title": "Agilex - Nios® V Processor PIO LED Toggle Design Example",
            "source": "Design Store",
            "family": "Agilex",
            "quartus_version": "22.4",
            "devkit": "Intel Agilex® F-Series FPGA Development Kit DK-DEV-AGF014EA",
            "description": "The design example demonstrates the transaction between the Nios® V processor and the parallel input/output (PIO) IP core.",
            "rich_description": "<p>The PIO IP is configured for output ports only and the outputs are connected to the LED on the dev kit.</p><p>&nbsp;</p><p>The application which runs atop of this design toggles these output registers of the PIO IP.&nbsp;The application writes and reads back the content from the IP location.&nbsp;</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/857653/0EM2f0000006nRJ.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "Reset Release Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763972/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763972?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763972?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763978",
            "group_id": "714759",
            "revision": 8,
            "title": "Intel Agilex® 7 FPGA – P - Tile CvP for Initialization Mode Design Example",
            "source": "Design Store",
            "family": "Intel Agilex® 7 FPGA – P",
            "quartus_version": "22.4",
            "devkit": "Intel Agilex® F-Series FPGA Development Kit DK-DEV-AGF014E3ES",
            "description": "This design demonstrates the Configuration via Protocol (CvP) initialization mode on the Intel Agilex® 7 FPGA F-Series Development Kit.",
            "rich_description": "<p>Configuration via Protocol (CvP) is a configuration scheme supported in Intel Agilex 7 FPGAs. The CvP configuration scheme creates separate images for the periphery and core logic. You can store the periphery image in a local configuration device and the core image in host memory, reducing system costs and increasing the security for the proprietary core image. CvP will configure the FPGA fabric through the PCI Express* ( PCIe* ) link, and is available for Endpoint variants only.</p><p><br></p><p><strong style=\"font-size: 16px;\">Prepare the design template in the Quartus Prime software GUI </strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p><p><br></p><p>The second means to bring up the project template is through the New Project Wizard (File -&gt; New Project Wizard). After entering the project name and folder on the first panel, the second panel will ask you to specify an empty project or project template. Select project template. You will see a list of Design Templates projects that you have loaded prior as well as various \"Baseline Pinout Designs\" that contain the pinout and settings for a variety of development kits. If you don't see your design template in the list, click on the link that states install the Design Templates circled below:</p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/714341/0EM2E000003UFec.png\"></p><p><br></p><p><span style=\"color: rgb(0, 0, 0);\">Browse to the &lt;project&gt;.par file you downloaded, click next, followed by Finish, and your design template will be installed and displayed in the Project Navigator pane in Quartus.</span></p><p><br></p><p><span style=\"color: rgb(0, 0, 0);\">Note: When a design is stored in the Design Store as a design template, it has been previously regression tested against the stated version of Quartus software. The regression ensures the design template passes analysis/synthesis/fitting/assembly steps in the Quartus design flow.</span></p><p><br></p><p><strong style=\"font-size: 16px;\">Prepare the design template in the Quartus Prime software command-line</strong></p><p><span style=\"color: rgb(0, 0, 0);\">At the command-line, type the following command:</span></p><p><span style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">quartus_sh --platform_install -package&nbsp;</span><em style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">&lt;project directory&gt;</em><span style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">/</span><em style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">&lt;project&gt;</em><span style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">.par</span></p><p><br></p><p>Once the process completes, then type:</p><p><span style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">quartus_sh --platform -name&nbsp;</span><em style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">&lt;project&gt;</em></p>",
            "documentations": [
                {
                    "title": "Intel® Agilex™ Device Configuration via Protocol (CvP) Implementation User Guide",
                    "downloadUrl": "https://www.intel.com/content/www/us/en/docs/programmable/683763/22-4/overview.html"
                }
            ],
            "ip_cores": [
                "On-Chip Memory (RAM or ROM)",
                "Reset Controller",
                "MM Interconnect",
                "Memory-Mapped Multiplexer",
                "Memory-Mapped Router",
                "Avalon-MM Slave Agent",
                "Avalon-MM Master Translator",
                "Memory-Mapped Demultiplexer",
                "Memory-Mapped Burst Adapter",
                "Avalon-ST Single Clock FIFO",
                "Avalon-MM Slave Translator",
                "Avalon-MM Master Agent"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763978/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763978?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763978?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763979",
            "group_id": "714477",
            "revision": 8,
            "title": "Agilex™ 7 FPGA - AN901: Implementing Synchronized ADC Dual Link Design with JESD204C RX IP Core Design Examplexample",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "22.4",
            "devkit": "Intel Agilex® F-Series Transceiver-SoC Development Kits",
            "description": "This application note provides guidelines to scale up the single link in the JESD204C Intel® FPGA IP core design example generated from the Intel Quartus® Prime software to handle a multipoint link system. A single link in JESD204C has one or more high-speed transceiver lanes or channels.",
            "rich_description": "<p>This application note provides guidelines on how to scale up the single link of the JESD204C&nbsp;Intel® FPGA IP&nbsp;design example generated from the&nbsp;Intel® Quartus® Prime&nbsp;software to handle a dual link system. A single link in JESD204C has one or more high speed transceiver lanes or channels.</p><p>In some JESD204C applications, multiple analog-to-digital converters (ADCs) are used to sample the analog signals synchronously. Hence, synchronization between multiple converters in the array is required. In these applications, multiple converters interface with a single logic device, such as the&nbsp;Intel® Agilex™&nbsp;7 FPGA E-tile.</p><p>Before implementing the dual link design, you must generate the receiver (RX) single-link design example from the&nbsp;Intel® Quartus® Prime&nbsp;software.&nbsp;Intel®&nbsp;recommends that you perform an RTL simulation on this single link design example to confirm the functionality matches your expectation before transforming the design example to the dual link design. The guidelines in the following section assume the JESD204C parameters for each link in the dual link design are identical.</p>",
            "documentations": [
                {
                    "title": "AN 901: Implementing Analog-to-Digital Converter Dual Link Design with Intel® Agilex™ FPGA E-Tile JESD204C RX IP",
                    "downloadUrl": "https://www.intel.com/content/www/us/en/docs/programmable/683537/current/adc-to-dual-link-design-overview.html"
                }
            ],
            "ip_cores": [
                "JESD204C Intel FPGA IP",
                "GPIO Intel FPGA IP",
                "Reset Release Intel FPGA IP",
                "IOPLL Intel FPGA IP",
                "JTAG to Avalon Master Bridge Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763979/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763979?explicitVersion=true&fileName=intel_jesd204c_ag_lmf484_2rx_ed_22_4.par",
            "first_file_in_uam": "intel_jesd204c_ag_lmf484_2rx_ed_22_4.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763979?explicitVersion=true&fileName=intel_jesd204c_ag_lmf484_2rx_ed_22_4.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763981",
            "group_id": "714516",
            "revision": 9,
            "title": "Agilex - Chip ID Reading Using Mailbox Client with Avalon® Streaming Interface Intel® FPGA IP Design Example",
            "source": "Design Store",
            "family": "Agilex",
            "quartus_version": "22.4",
            "devkit": "Intel Agilex® F-Series Transceiver-SoC Development Kit DK-SI-AGF014E3ES",
            "description": "This design example shows the chip ID reading functionality using the Avalon® Streaming Interface Intel® FPGA IP with an Intel Agilex® 7 FPGA Development Kit. The chip ID reading functionality is implemented in Verilog and connects with the IP communicating with flash memory.",
            "rich_description": "<p>In Intel Agilex 7 FPGAs IP to perform chip ID reading is no longer available. Thus, custom logic has to be created and connected to Mailbox Avalon® ST Client Intel FPGA IP to perform chip ID reading. This reference design indicates the usage of Mailbox Avalon® ST Client Intel FPGA IP to perform chip id reading. The tutorial is demonstrated using Signal Tap.</p>",
            "documentations": [
                {
                    "title": "Mailbox Client with Avalon® Streaming Interface Intel® FPGA IP User Guide",
                    "downloadUrl": "https://www.intel.com/content/dam/www/programmable/us/en/pdfs/literature/ug/ug-avst-client-ag.pdf"
                },
                {
                    "title": "Chip ID Reading using AVST Mailbox IP in Agilex",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/714517?explicitVersion=true&fileName=Chip%20ID%20Reading%20using%20AVST%20Mailbox%20IP%20in%20Agilex.pdf"
                }
            ],
            "ip_cores": [
                "Mailbox Client with Avalon Streaming Interface Intel FPGA IP",
                "Reset Release Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763981/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763981?explicitVersion=true&fileName=AGLX_CHIP_ID_AVST_MAILBOX_22_4.par",
            "first_file_in_uam": "AGLX_CHIP_ID_AVST_MAILBOX_22_4.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763981?explicitVersion=true&fileName=AGLX_CHIP_ID_AVST_MAILBOX_22_4.par",
            "Q_VALIDATED": true
        },
        {
            "id": "763982",
            "group_id": "714740",
            "revision": 8,
            "title": "Agilex™ 7 FPGA - I/O PLL Reconfiguration Design Examplexample",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "22.4",
            "devkit": "Intel Agilex® F-Series Transceiver-SoC Development Kit DK-SI-AGF014E3ES",
            "description": "This design example uses an Intel Agilex® 7 FPGA to demonstrate the implementation of the following three different I/O phase-locked loop (PLL) reconfiguration options using the IOPLL Reconfig Intel® FPGA IP core: \n(1) .mif streaming \n(2) Advanced mode \n(3) Clock gating \nThis design example consists of the IOPLL, IOPLL Reconfig, In-System Sources & Probes, and Reset Release Intel FPGA IP cores.",
            "rich_description": "<p><span style=\"font-size: 1em;\">This design example uses a AGFB014R24A2E3VR0 device to demonstrate the implementation of the following three different I/O PLL reconfiguration option using the IOPLL Reconfig IP core.</span></p><p>\t<span style=\"font-size: 1em;\">• .mif streaming</span></p><p>\t<span style=\"font-size: 1em;\">• Advanced mode</span></p><p>\t<span style=\"font-size: 1em;\">• Clock gating</span></p><p><span style=\"font-size: 1em;\">This design example consists of the IOPLL IP core, IOPLL Reconfig IP core, and In-System Sources &amp; Probes Intel FPGA IP core.</span></p>",
            "documentations": [
                {
                    "title": "Intel® Agilex™ Clocking and PLL User Guide",
                    "downloadUrl": "https://www.intel.com/content/www/us/en/docs/programmable/683761/20-3/clocking-and-pll-overview.html"
                }
            ],
            "ip_cores": [
                "IOPLL Intel FPGA IP",
                "IOPLL Reconfig Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP",
                "Reset Release Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/763982/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/763982?explicitVersion=true&fileName=AGFB014R24A2E2V_IOPLLReconfig_Design.par",
            "first_file_in_uam": "AGFB014R24A2E2V_IOPLLReconfig_Design.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/763982?explicitVersion=true&fileName=AGFB014R24A2E2V_IOPLLReconfig_Design.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776151",
            "group_id": "763957",
            "revision": 4,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel Agilex® 7 F-Series FPGA Development Kit DK-DEV-AGF014EA",
            "description": "Nios® V/m-based \"Hello World\" design example on the Intel Agilex® 7 FPGA.",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776151/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776151?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776151?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776152",
            "group_id": "763963",
            "revision": 4,
            "title": "SDM Bootloader for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/g processor application copied from configuration QSPI flash to RAM using a boot copier (Secure Device Manager (SDM) bootloader).",
            "rich_description": "<p>The&nbsp;Nios® V&nbsp;processor starts executing the boot copier upon system reset, which copies the application from the configuration&nbsp;quad serial peripheral interface (QSPI) to the internal RAM. Once this completes, the <span style=\"color: rgb(68, 68, 68);\">Nios® V&nbsp;</span>processor transfers the program control over to the application.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850744/0EM2f0000006mlI.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Mailbox Client Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776152/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776152?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776152?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776153",
            "group_id": "763965",
            "revision": 4,
            "title": "Bootloader GSFI for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "The Nios® V processor application is copied from the configuration QSPI flash to RAM using the boot copier (i.e., Generic Serial Flash Interface (GSFI) bootloader).",
            "rich_description": "<p>The GSFI bootloader is the Nios® processor boot copier that supports QSPI flash memory in control block-based devices. The GSFI bootloader includes the following features:</p><ol><li>Locates the software application in non-volatile memory.</li><li>Unpacks and copies the software application image to RAM.</li><li>Automatically switches processor execution to application code in RAM after copy completes.&nbsp;</li></ol><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850746/0EM2f0000006mlD.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Generic Serial Flash Interface Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776153/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776153?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776153?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776154",
            "group_id": "763959",
            "revision": 4,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "Nios® V/m processor-based \"Hello World\" design example on the Intel® Arria® 10 FPGA.",
            "rich_description": "<p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p><br></p>",
            "documentations": [],
            "ip_cores": [
                "Nios® V/m Processor Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776154/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776154?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776154?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776155",
            "group_id": "763961",
            "revision": 4,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/m processor-based \"Hello World\" design example on the Intel® Stratix® 10 FPGA.",
            "rich_description": "<p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios® V/m Processor Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776155/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776155?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776155?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776157",
            "group_id": "776156",
            "revision": 4,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/g processor-based \"Hello World\" design example on the Intel® Stratix® 10 FPGA.",
            "rich_description": "<p><br></p><p><span style=\"color: rgb(68, 68, 68);\"><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></span></p>",
            "documentations": [],
            "ip_cores": [
                "Nios® V/g Processor Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776157/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776157?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776157?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776158",
            "group_id": "763969",
            "revision": 4,
            "title": "II* RTOS with IPerf for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA – μC/OS",
            "quartus_version": "23.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "Perf 2 is a benchmarking tool for measuring performance between two systems and it can be used as a server or a client.",
            "rich_description": "<p>An iPerf server receives an iPerf request sent over a TCP/IP connection from any iPerf clients and runs the iPerf test according to the provided arguments. Each test reports the bandwidth, loss, and other parameters.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850750/0EM2f0000006mlS.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "altera_msgdma"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776158/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776158?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776158?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776159",
            "group_id": "763967",
            "revision": 4,
            "title": "Simple Socket Server for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "This design demonstrates the communication with a telnet client on a development host PC.",
            "rich_description": "<p>The telnet client offers a convenient way of issuing commands over a TCP/IP socket to the Ethernet-connected μC/TCP-IP running on the development board with a simple TCP/IP socket server example. The socket server example receives commands sent over a TCP/IP connection and turns LEDs on and off according to the commands. The example consists of a socket server task that listens for commands on a TCP/IP port and dispatches those commands to a set of LED management tasks.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850748/0EM2f0000006mlN.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "Transceiver ATX PLL Intel Arria 10/Cyclone 10 FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776159/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776159?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776159?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776192",
            "group_id": "776191",
            "revision": 5,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel Agilex® 7 F-Series FPGA Development Kit DK-DEV-AGF014EA",
            "description": "Nios® V/g processor-based Hello World design example on the Intel Agilex® 7 FPGA.",
            "rich_description": "<p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776192/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776192?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776192?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776196",
            "group_id": "776195",
            "revision": 4,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit Production DK-SOC-10AS066S-D",
            "description": "Nios® V/g processor-based \"Hello World\" design example on the Intel® Arria® 10 FPGA.",
            "rich_description": "<p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776196/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776196?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776196?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776205",
            "group_id": "776202",
            "revision": 6,
            "title": "SDM Bootloader for the Nios® V/g Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Stratix® 10 GX FPGA Development Kit Production H-Tile",
            "description": "Nios® V/g processor application copied from configuration QSPI flash to RAM using a boot copier (Secure Device Manager (SDM) bootloader).",
            "rich_description": "<p>The&nbsp;Nios® V/g&nbsp;processor starts executing the boot copier upon system reset, which copies the application from the configuration&nbsp;quad serial peripheral interface (QSPI) to the internal RAM. Once this completes, the Nios V/g processor transfers the program control over to the application.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850744/0EM2f0000006mlI.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Mailbox Client Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776205/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776205?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776205?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776208",
            "group_id": "776206",
            "revision": 4,
            "title": "Bootloader GSFI for the Nios® V/g Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit Production DK-SOC-10AS066S-D",
            "description": "The Nios® V/g processor application is copied from the configuration QSPI flash to RAM using the boot copier (i.e., Generic Serial Flash Interface (GSFI) bootloader).",
            "rich_description": "<p>The GSFI bootloader is the Nios®&nbsp;V/g processor boot copier that supports QSPI flash memory in control block-based devices. The GSFI bootloader includes the following features:</p><ol><li>Locates the software application in non-volatile memory.</li><li>Unpacks and copies the software application image to RAM.</li><li>Automatically switches processor execution to application code in RAM after copy completes.&nbsp;</li></ol><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850746/0EM2f0000006mlD.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios® V/g Processor Intel FPGA IP",
                "Generic Serial Flash Interface Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776208/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776208?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776208?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776211",
            "group_id": "776210",
            "revision": 4,
            "title": "Simple Socket Server for the Nios® V/g Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit Production DK-SOC-10AS066S-D",
            "description": "This design demonstrates the communication with a telnet client on a development host PC.",
            "rich_description": "<p>TThe telnet client offers a convenient way of issuing commands over a TCP/IP socket to the Ethernet-connected μC/TCP-IP running on the development board with a simple TCP/IP socket server example. The socket server example receives commands sent over a TCP/IP connection and turns LEDs on and off according to the commands. The example consists of a socket server task that listens for commands on a TCP/IP port and dispatches those commands to a set of LED management tasks.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850748/0EM2f0000006mlN.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "Transceiver ATX PLL Intel Arria 10/Cyclone 10 FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776211/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776211?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776211?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776272",
            "group_id": "776271",
            "revision": 5,
            "title": "Custom Instruction on the Nios® V/g Processor Design Exampleign Example",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "23.1",
            "devkit": "Intel Agilex® 7 F-Series FPGA Development Kit DK-DEV-AGF014EA",
            "description": "This design demonstrates the custom instruction feature of the Nios® V/g processor using the Intel Agilex® 7 FPGA F-Series Development Kit.",
            "rich_description": "<p><span style=\"font-size: 11pt; font-family: Calibri, sans-serif;\">A Processing Engine (PE) that performs basic arithmetic and logical computations is connected to the </span>Nios®<span style=\"font-size: 11pt; font-family: Calibri, sans-serif;\"> V/g processor using the custom instruction interface. The current version of the </span>Nios®<span style=\"font-size: 11pt; font-family: Calibri, sans-serif;\"> V/g processor custom instruction interface supports operations up-to 32-Bit.&nbsp;</span></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/877529/0EM2f0000006sQ1.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776272/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776272?explicitVersion=true&fileName=niosv_custom_instruction.par",
            "first_file_in_uam": "niosv_custom_instruction.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776272?explicitVersion=true&fileName=niosv_custom_instruction.par",
            "Q_VALIDATED": true
        },
        {
            "id": "776281",
            "group_id": "776280",
            "revision": 5,
            "title": "IPerf Design for the Nios® V/g Processorg Processor",
            "source": "Design Store",
            "family": "Arria® 10",
            "quartus_version": "23.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit DK-SOC-10AS066S-A",
            "description": "Perf 2 is a benchmarking tool for measuring performance between two systems and it can be used as a server or a client.",
            "rich_description": "<p>An iPerf server receives an iPerf request sent over a TCP/IP connection from any iPerf clients and runs the iPerf test according to the provided arguments. Each test reports the bandwidth, loss, and other parameters.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850750/0EM2f0000006mlS.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "altera_msgdma"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/776281/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/776281?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/776281?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "777142",
            "group_id": "763953",
            "revision": 4,
            "title": "Nios® V/m Processor OCM to OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel Agilex® 7 F-Series FPGA Development Kit DK-DEV-AGF014EA",
            "description": "This design example shows on-chip memory (OCM) access using the Nios® V/m processor.",
            "rich_description": "<p>The <span style=\"font-size: 13px;\">Nios® </span>V/m core communicates with the on-chip RAM and reads/writes to specific memory locations as specified in the code. The UART IP then prints the necessary statements.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/843875/0EM2f0000006mxs.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/777142/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/777142?explicitVersion=true&fileName=aglx_niosv_ocm_mem_transfer.par",
            "first_file_in_uam": "aglx_niosv_ocm_mem_transfer.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/777142?explicitVersion=true&fileName=aglx_niosv_ocm_mem_transfer.par",
            "Q_VALIDATED": true
        },
        {
            "id": "777143",
            "group_id": "763955",
            "revision": 4,
            "title": "Nios® V Processor with DMA and OCM Design Examplexample",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel Agilex® 7 F-Series FPGA Development Kit DK-DEV-AGF014EA",
            "description": "This design example demonstrates a data transfer between two on-chip memory (OCM) blocks mapped to the Nios® V processor via direct memory access (DMA).",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/843892/0EM2f0000006m8k.png\"></p>",
            "documentations": [],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/777143/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/777143?explicitVersion=true&fileName=niosv_dma_ocm_to_ocm.par",
            "first_file_in_uam": "niosv_dma_ocm_to_ocm.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/777143?explicitVersion=true&fileName=niosv_dma_ocm_to_ocm.par",
            "Q_VALIDATED": true
        },
        {
            "id": "778751",
            "group_id": "778750",
            "revision": 5,
            "title": "PAM4 8x53Gbps with QSFPDD Serial Loopback on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel Agilex® 7 F-Series FPGA Development Kit DK-DEV-AGF027F1ES",
            "description": "This design demonstrates the serial loopback via QSFPDD function on the Intel Agilex® 7 FPGA F-Series Development Kit (2x F-Tile).",
            "rich_description": "<p>Uses Intel Agilex® 7 FPGA F-Series Development Kit (2x F-Tile) as platform for demonstration.</p><p>Uses 2 Native PHY’s with each 4 independent physical lanes connected to QSFPDD0 and QSFPDD1 and each channel configured in RSFEC53Gpbs PAM4 using 8 FGT’s located in Quad 3 and Quad 1.</p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/778751/0EMHu000003aNOh.png\"></p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - PAM4 8x53Gpbs with QSFPDD Serial loopback design on NIOS V/m Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/778751?explicitVersion=true&fileName=niosv_xcver_design_details.pdf"
                }
            ],
            "ip_cores": [
                "F-Tile PMA/FEC Direct PHY Intel FPGA IP",
                "Mailbox Client Intel FPGA IP",
                "Nios V/m Processor Intel FPGA IP",
                "F-Tile Reference and System PLL Clocks Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/778751/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/778751?explicitVersion=true&fileName=devkit_demo.par",
            "first_file_in_uam": "devkit_demo.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/778751?explicitVersion=true&fileName=devkit_demo.par",
            "Q_VALIDATED": true
        },
        {
            "id": "781975",
            "group_id": "763957",
            "revision": 5,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/m-based Hello World example design on the Intel Agilex® 7 FPGA.",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - Hello World Design on Nios® V/m Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/781975?explicitVersion=true&fileName=Intel Agilex 7 FPGA - Helloworld Design on Nios Vm Processor.pdf"
                },
                {
                    "title": "Nios® V Embedded Processor Design Handbook",
                    "downloadUrl": "https://www.intel.com/content/www/us/en/docs/programmable/726952/current/"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/781975/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/781975?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/781975?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "784080",
            "group_id": "714477",
            "revision": 6,
            "title": "AN901: Implementing Synchronized ADC Dual Link Design with JESD204C RX IP Core Design Examplexample",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel Agilex® 7 F-Series Transceiver-SoC Development Kit DK-SI-AGF014E3ES",
            "description": "This application note provides guidelines to scale up the single link in the JESD204C Intel® FPGA IP core design example generated from the Intel Quartus® Prime software to handle a multipoint link system. A single link in JESD204C has one or more high-speed transceiver lanes or channels.",
            "rich_description": "<p>This application note provides guidelines on how to scale up the single link of the JESD204C&nbsp;Intel® FPGA IP&nbsp;design example generated from the&nbsp;Intel® Quartus® Prime&nbsp;software to handle a dual link system. A single link in JESD204C has one or more high speed transceiver lanes or channels.</p><p><br></p><p>In some JESD204C applications, multiple analog-to-digital converters (ADCs) are used to sample the analog signals synchronously. Hence, synchronization between multiple converters in the array is required. In these applications, multiple converters interface with a single logic device, such as the&nbsp;Intel Agilex<span style=\"color: rgb(68, 68, 68);\">® </span>7 FPGA E-tile.</p><p><br></p><p>Before implementing the dual link design, you must generate the receiver (RX) single-link design example from the&nbsp;Intel® Quartus® Prime&nbsp;software.&nbsp;Intel®&nbsp;recommends that you perform an RTL simulation on this single link design example to confirm the functionality matches your expectation before transforming the design example to the dual link design. The guidelines in the following section assume the JESD204C parameters for each link in the dual link design are identical.</p><p><br></p><p><strong>Prepare the design template in the Quartus Prime software GUI (version 14.1 and later)</strong></p><p><br></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. In releases 16.0 or newer, you can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p><p><br></p><p>The second means to bring up the project template is through the New Project Wizard (File -&gt; New Project Wizard). After entering the project name and folder on the first panel, the second panel will ask you to specify an empty project or project template. Select project template. You will see a list of Design Templates projects that you have loaded prior as well as various \"Baseline Pinout Designs\" that contain the pinout and settings for a variety of development kits. If you don't see your design template in the list, click on the link that states install the Design Templates circled below:</p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/714341/0EM2E000003UFec.png\"></p><p><br></p><p><span style=\"color: rgb(0, 0, 0);\">Browse to the &lt;project&gt;.par file you downloaded, click next, followed by Finish, and your design template will be installed and displayed in the Project Navigator pane in Quartus.</span></p><p><br></p><p><span style=\"color: rgb(0, 0, 0);\">Note: When a design is stored in the Design Store as a design template, it has been previously regression tested against the stated version of Quartus software. The regression ensures the design template passes analysis/synthesis/fitting/assembly steps in the Quartus design flow.</span></p><p><br></p><p><strong>Prepare the design template in the Quartus Prime software command-line</strong></p><p><br></p><p><span style=\"color: rgb(0, 0, 0);\">At the command-line, type the following command:</span></p><p><span style=\"font-size: inherit; background-color: transparent; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: inherit;\">quartus_sh --platform_install -package&nbsp;</span><em style=\"font-size: inherit; background-color: transparent; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: inherit;\">&lt;project directory&gt;</em><span style=\"font-size: inherit; background-color: transparent; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: inherit;\">/</span><em style=\"font-size: inherit; background-color: transparent; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: inherit;\">&lt;project&gt;</em><span style=\"font-size: inherit; background-color: transparent; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: inherit;\">.par</span></p><p><br></p><p>Once the process completes, then type:</p><p><span style=\"font-size: inherit; background-color: transparent; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: inherit;\">quartus_sh --platform -name&nbsp;</span><em style=\"font-size: inherit; background-color: transparent; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: inherit;\">&lt;project&gt;</em></p><p><br></p><p><br></p><p><strong>Note:</strong></p><p>* ACDS Version: 22.3.0 Pro</p>",
            "documentations": [
                {
                    "title": "AN 901: Implementing Analog-to-Digital Converter Dual Link Design with Intel Agilex® 7 FPGA E-Tile JESD204C RX IP",
                    "downloadUrl": "https://www.intel.com/content/www/us/en/docs/programmable/683537/current/adc-to-dual-link-design-overview.html"
                }
            ],
            "ip_cores": [
                "JESD204C Intel FPGA IP",
                "GPIO Intel FPGA IP",
                "Reset Release Intel FPGA IP",
                "IOPLL Intel FPGA IP",
                "JTAG to Avalon Master Bridge Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/784080/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/784080?explicitVersion=true&fileName=intel_jesd204c_ag_lmf484_2rx_23_1.par",
            "first_file_in_uam": "intel_jesd204c_ag_lmf484_2rx_23_1.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/784080?explicitVersion=true&fileName=intel_jesd204c_ag_lmf484_2rx_23_1.par",
            "Q_VALIDATED": true
        },
        {
            "id": "787038",
            "group_id": "763957",
            "revision": 4,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/m processor based Helloworld example design on the Intel Agilex® 7 FPGA.",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - Hello World Design on Nios® V/m Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/787038?explicitVersion=true&fileName=Intel Agilex 7 FPGA - Helloworld Design on Nios Vm Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/787038/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/787038?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/787038?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "787040",
            "group_id": "763957",
            "revision": 3,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/m processor-based Hello World design example on the Agilex™ 7 FPGA.",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Hello World on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/787040?explicitVersion=true&fileName=Agilex 7 FPGA Helloworld Design on Nios Vm Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/787040/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/787040?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/787040?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "789377",
            "group_id": "778750",
            "revision": 3,
            "title": "PAM4 8x53Gbps with QSFPDD Serial Loopback on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (ES1 2x F-Tile) DK-DEV-AGF027F1ES",
            "description": "This design demonstrates the serial loopback via QSFPDD on Intel Agilex®7 FPGA F-Series Development Kit (2x F-Tile)",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880699/0EMDx0000009eay.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - PAM4 8x53Gpbs with QSFPDD Serial loopback design on the Nios® V/m Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/789377?explicitVersion=true&fileName=Intel Agilex 7 FPGA PAM4 8x53Gpbs with QSFPDD Serial loopback design on the Nios Vm Processor.pdf"
                }
            ],
            "ip_cores": [
                "F-Tile PMA/FEC Direct PHY Intel FPGA IP",
                "Mailbox Client Intel FPGA IP",
                "Nios V/m Processor Intel FPGA IP",
                "F-Tile Reference and System PLL Clocks Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/789377/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/789377?explicitVersion=true&fileName=devkit_demo.par",
            "first_file_in_uam": "devkit_demo.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB027R24C2E2VR2",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/789377?explicitVersion=true&fileName=devkit_demo.par",
            "Q_VALIDATED": true
        },
        {
            "id": "790508",
            "group_id": "714477",
            "revision": 7,
            "title": "AN901: Implementing Synchronized ADC Dual Link Design with JESD204C RX IP Core Design Examplexample",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Transceiver-SoC Development Kit DK-SI-AGF014E3ES",
            "description": "This application note provides guidelines to scale up the single link in the JESD204C Intel® FPGA IP core design example generated from the Intel® Quartus® Prime software to handle multipoint link system. A single link in JESD204C has one or more high speed transceiver lanes or channels.",
            "rich_description": "<p>This application note provides guidelines on how to scale up the single link of the JESD204C&nbsp;Intel® FPGA IP&nbsp;design example generated from the&nbsp;Intel® Quartus® Prime&nbsp;software to handle a dual link system. A single link in JESD204C has one or more high speed transceiver lanes or channels.</p><p><br></p><p>In some JESD204C applications, multiple analog-to-digital converters (ADCs) are used to sample the analog signals synchronously. Hence, synchronization between multiple converters in the array is required. In these applications, multiple converters interface with a single logic device, such as the&nbsp;Intel Agilex® 7 FPGA E-tile.</p><p><br></p><p>Before implementing the dual link design, you must generate the receiver (RX) single-link design example from the&nbsp;Intel® Quartus® Prime&nbsp;software.&nbsp;Intel®&nbsp;recommends that you perform an RTL simulation on this single link design example to confirm the functionality matches your expectation before transforming the design example to the dual link design. The guidelines in the following section assume the JESD204C parameters for each link in the dual link design are identical.</p><p><br></p><p><strong>Prepare the design template in the Quartus Prime software GUI (version 14.1 and later)</strong></p><p><br></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. In releases 16.0 or newer, you can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p><p><br></p><p>The second means to bring up the project template is through the New Project Wizard (File -&gt; New Project Wizard). After entering the project name and folder on the first panel, the second panel will ask you to specify an empty project or project template. Select project template. You will see a list of Design Templates projects that you have loaded prior as well as various \"Baseline Pinout Designs\" that contain the pinout and settings for a variety of development kits. If you don't see your design template in the list, click on the link that states install the Design Templates circled below:</p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/714341/0EM2E000003UFec.png\"></p><p><br></p><p><span style=\"color: rgb(0, 0, 0);\">Browse to the &lt;project&gt;.par file you downloaded, click next, followed by Finish, and your design template will be installed and displayed in the Project Navigator pane in Quartus.</span></p><p><br></p><p><span style=\"color: rgb(0, 0, 0);\">Note: When a design is stored in the Design Store as a design template, it has been previously regression tested against the stated version of Quartus software. The regression ensures the design template passes analysis/synthesis/fitting/assembly steps in the Quartus design flow.</span></p><p><br></p><p><strong>Prepare the design template in the Quartus Prime software command-line</strong></p><p><br></p><p><span style=\"color: rgb(0, 0, 0);\">At the command-line, type the following command:</span></p><p><span style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">quartus_sh --platform_install -package&nbsp;</span><em style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">&lt;project directory&gt;</em><span style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">/</span><em style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">&lt;project&gt;</em><span style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">.par</span></p><p><br></p><p>Once the process completes, then type:</p><p><span style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">quartus_sh --platform -name&nbsp;</span><em style=\"color: inherit; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; background-color: transparent; font-size: inherit;\">&lt;project&gt;</em></p><p><br></p><p><br></p><p><strong>Note:</strong></p><p>* ACDS Version: 22.3.0 Pro</p>",
            "documentations": [
                {
                    "title": "AN 901: Implementing Analog-to-Digital Converter Dual Link Design with Intel Agilex® 7 FPGA E-Tile JESD204C RX IP",
                    "downloadUrl": "https://www.intel.com/content/www/us/en/docs/programmable/683537/current/adc-to-dual-link-design-overview.html"
                }
            ],
            "ip_cores": [
                "JESD204C Intel FPGA IP",
                "GPIO Intel FPGA IP",
                "Reset Release Intel FPGA IP",
                "IOPLL Intel FPGA IP",
                "JTAG to Avalon Master Bridge Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/790508/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/790508?explicitVersion=true&fileName=intel_jesd204c_ag_lmf484_2rx_23_3.par",
            "first_file_in_uam": "intel_jesd204c_ag_lmf484_2rx_23_3.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/790508?explicitVersion=true&fileName=intel_jesd204c_ag_lmf484_2rx_23_3.par",
            "Q_VALIDATED": true
        },
        {
            "id": "790691",
            "group_id": "790687",
            "revision": 3,
            "title": "Nios® V/c Processor with PIO and OCMd OCM",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "23.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example includes a Nios® V/c embedded processor connected to the Parallel Input Output (PIO) IP, On-Chip RAM  JTAG UART IP and System ID Peripheral core IP.",
            "rich_description": "<p>The objective of the design is to accomplish :</p><p>1.&nbsp;&nbsp;&nbsp;&nbsp;Toggle the PIO registers which in turn toggles the LED connected on dev kit and readback the registers</p><p>2.&nbsp;&nbsp;&nbsp;&nbsp;Write/Read to and from the On Chip memory connected to the embedded processor</p><p>3.&nbsp;&nbsp;&nbsp;&nbsp;Readback and print the System Peripheral core register to check of the value written in the IP during configuration</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/883037/0EMDx0000009lSr.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - Nios® V/c Processor with PIO and OCM",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/790691?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_NiosVc_Processor_with_OCM_PIO_getting_started.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/c Compact Microcontroller Intel FPGA IP",
                "On Chip RAM-II",
                "JTAG UART",
                "System ID Peripheral Core",
                "Parallel Input Output"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/790691/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/790691?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/790691?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "790774",
            "group_id": "790773",
            "revision": 3,
            "title": "Nios® V/m Processor with DDR DMA and OCM Design Exampleample",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "23.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design performs data transfer between On-Chip Memory (OCM) and DDR via DMA.",
            "rich_description": "<p>This example design includes a NIOS®&nbsp;V/m embedded processor connected to the EMIF, DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to accomplish a data transfer between the On Chip RAM and the DDR (EMIF) using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which is then read back by the processor</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/883034/0EMDx0000009lSm.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - Nios® V/m Processor with DDR DMA and OCM",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/790774?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_NiosV_Processor_with_DMA_DDR_OCM_Data_Mover_Test.pdf"
                }
            ],
            "ip_cores": [
                "NIOS® V/m soft processor core",
                "MSGDMA",
                "On Chip RAM",
                "JTAG UART"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/790774/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/790774?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/790774?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "790983",
            "group_id": "776271",
            "revision": 4,
            "title": "Custom Instruction on the Nios® V/g Processor Design Exampleign Example",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "23.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design demonstrates the custom instruction feature of the Nios® V/g processor using the Intel Agilex® 7 FPGA F-Series Development Kit.",
            "rich_description": "<p><span style=\"font-family: Calibri, sans-serif; font-size: 11pt;\">A Processing Engine (PE) that performs basic arithmetic and logical computations is connected to the&nbsp;</span>Nios®<span style=\"font-family: Calibri, sans-serif; font-size: 11pt;\">&nbsp;V/g processor using the custom instruction interface. The current version of the&nbsp;</span>Nios®<span style=\"font-family: Calibri, sans-serif; font-size: 11pt;\">&nbsp;V/g processor custom instruction interface supports operations up-to 32-Bit.&nbsp;</span></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/877529/0EM2f0000006sQ1.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p><p><br></p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - Custom Instruction Design on Nios® V/g Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/790983?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_Custom_Instruction_Design_on_Nios_Vg_processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/790983/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/790983?explicitVersion=true&fileName=niosv_custom_instruction.par",
            "first_file_in_uam": "niosv_custom_instruction.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/790983?explicitVersion=true&fileName=niosv_custom_instruction.par",
            "Q_VALIDATED": true
        },
        {
            "id": "790984",
            "group_id": "776280",
            "revision": 3,
            "title": "IPerf Design for the Nios® V/g Processorg Processor",
            "source": "Design Store",
            "family": "Arria® 10",
            "quartus_version": "23.3",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit DK-SOC-10AS066S-A",
            "description": "Perf 2 is a benchmarking tool for measuring performance between two systems, and it can be used as a server or a client.",
            "rich_description": "<p>An iPerf server receives an iPerf request sent over a TCP/IP connection from any iPerf clients and runs the iPerf test according to the provided arguments. Each test reports the bandwidth, loss, and other parameters.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850750/0EM2f0000006mlS.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel® Arria® 10 FPGA - Iperf Design for Nios® V/g Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/790984?explicitVersion=true&fileName=Intel_Arria_10_FPGA_Iperf_Design_for_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "altera_msgdma"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/790984/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/790984?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/790984?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791051",
            "group_id": "789502",
            "revision": 4,
            "title": "CRC Custom Instruction Design on Nios® V/g processorg processor",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "23.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design demonstrates the Cyclic Redundancy Check (CRC) algorithm using the custom instruction feature of the Nios® V/g processor using  Agilex™ 7 FPGA F-Series Development Kit.",
            "rich_description": "<p>A Processing Engine (PE) that performs the CRC algorithm is connected to the Nios® V/g processor using the custom instruction interface. The current version of the Nios® V/g processor custom instruction interface supports operations up-to 32-Bit.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880846/0EMDx0000009ebS.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA - CRC Custom Instruction Design on Nios® V/g processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791051?explicitVersion=true&fileName=Agilex 7 FPGA Custom Instruction Design on Nios Vg processor CRC.pdf"
                }
            ],
            "ip_cores": [
                "NIOS V/g soft processor core",
                "On Chip RAM",
                "JTAG UART",
                "Custom PE CRC",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791051/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791051?explicitVersion=true&fileName=ci_crc.par",
            "first_file_in_uam": "ci_crc.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791051?explicitVersion=true&fileName=ci_crc.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791062",
            "group_id": "778750",
            "revision": 4,
            "title": "PAM4 8x53Gbps with QSFPDD Serial Loopback on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (ES1 2x F-Tile) DK-DEV-AGF027F1ES",
            "description": "This design demonstrates the serial loopback via QSFPDD on Agilex™ 7 FPGA F-Series Development Kit (2x F-Tile)",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880699/0EMDx0000009eay.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – PAM4 8x53Gbps with QSFPDD Serial Loopback on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791062?explicitVersion=true&fileName=Agilex_7_FPGA_PAM4_8x53Gpbs_with_QSFPDD_Serial_loopback_design_on_the_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "F-Tile PMA/FEC Direct PHY Intel FPGA IP",
                "Mailbox Client Intel FPGA IP",
                "Nios V/m Processor Intel FPGA IP",
                "F-Tile Reference and System PLL Clocks Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791062/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791062?explicitVersion=true&fileName=devkit_demo.par",
            "first_file_in_uam": "devkit_demo.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB027R24C2E2VR2",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791062?explicitVersion=true&fileName=devkit_demo.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791087",
            "group_id": "714740",
            "revision": 3,
            "title": "I/O PLL Reconfiguration Design Examplexample",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Transceiver-SoC Development Kit DK-SI-AGF014E3ES",
            "description": "This design example uses a Intel Agilex® 7 FPGA to demonstrate the implementation of the following three different I/O PLL reconfiguration option using the IOPLL Reconfig IP core. (1) .mif streaming (2) Advanced mode (3) Clock gating This design example consists of the IOPLL IP core, IOPLL Reconfig IP core, In-System Sources & Probes Intel FPGA IP core and Reset Release Intel FPGA IP.",
            "rich_description": "<p><span style=\"font-size: 1em;\">This design example uses a </span>AGFB014R24A2E2V<span style=\"font-size: 1em;\"> device to demonstrate the implementation of the following three different I/O PLL reconfiguration option using the IOPLL Reconfig IP core.</span></p><p><span style=\"font-size: 1em;\">• .mif streaming</span></p><p><span style=\"font-size: 1em;\">• Advanced mode</span></p><p><span style=\"font-size: 1em;\">• Clock gating</span></p>",
            "documentations": [
                {
                    "title": "Intel® Agilex™ Clocking and PLL User Guide",
                    "downloadUrl": "https://www.intel.com/content/www/us/en/docs/programmable/683761/20-3/clocking-and-pll-overview.html"
                }
            ],
            "ip_cores": [
                "IOPLL Intel FPGA IP",
                "IOPLL Reconfig Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP",
                "Reset Release Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791087/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791087?explicitVersion=true&fileName=AGFB014R24A2E2V_IOPLLReconfig_DE_23.3.par",
            "first_file_in_uam": "AGFB014R24A2E2V_IOPLLReconfig_DE_23.3.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791087?explicitVersion=true&fileName=AGFB014R24A2E2V_IOPLLReconfig_DE_23.3.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791104",
            "group_id": "776210",
            "revision": 4,
            "title": "Simple Socket Server for the Nios® V/g Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit (Production) DK-SOC-10AS066S-D",
            "description": "This example design demonstrates communication with a telnet client on a development host PC",
            "rich_description": "<p>The telnet client offers a convenient way of issuing commands over a TCP/IP socket to the Ethernet-connected μC/TCP-IP running on the development board with a simple TCP/IP socket server example. The socket server example receives commands sent over a TCP/IP connection and turns LEDs on and off according to the commands. The example consists of a socket server task that listens for commands on a TCP/IP port and dispatches those commands to a set of LED management tasks.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850748/0EM2f0000006mlN.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA - Simple Socket Server Design for Nios® V/g core Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791104?explicitVersion=true&fileName=Arria_10_FPGA_Simple_Socket_Server_Design_for_Nios_Vg_processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "Transceiver ATX PLL Intel Arria 10/Cyclone 10 FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791104/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791104?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791104?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791114",
            "group_id": "776206",
            "revision": 4,
            "title": "Bootloader GSFI for the Nios® V/g Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit (Production) DK-SOC-10AS066S-D",
            "description": "The Nios® V/g processor application is copied from the configuration QSPI flash to RAM using the boot copier (i.e., Generic Serial Flash Interface (GSFI) bootloader)",
            "rich_description": "<p>The GSFI bootloader is the Nios®&nbsp;V/g processor boot copier that supports QSPI flash memory in control block-based devices. The GSFI bootloader includes the following features:</p><ol><li>Locates the software application in non-volatile memory.</li><li>Unpacks and copies the software application image to RAM.</li><li>Automatically switches processor execution to application code in RAM after copy completes.&nbsp;</li></ol><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850746/0EM2f0000006mlD.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GU</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA - Bootloader GSFI Design for Nios® V/g Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791114?explicitVersion=true&fileName=Arria_10_FPGA_Bootloader_GSFI_Design_for_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/g Processor Intel FPGA IP",
                "Generic Serial Flash Interface Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791114/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791114?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791114?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791158",
            "group_id": "776202",
            "revision": 4,
            "title": "SDM Bootloader for the Nios® V/g Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/g Processor Application Copied from Configuration QSPI Flash to RAM Using Boot Copier (SDM Bootloader)",
            "rich_description": "<p>The&nbsp;Nios® V&nbsp;processor starts executing the boot copier upon system reset, which copies the application from the configuration&nbsp;quad serial peripheral interface (QSPI) to the internal RAM. Once this completes, the Nios V/g processor transfers the program control over to the application.</p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850744/0EM2f0000006mlI.png\"></p><p><br></p><p>Please refer to the document for details about the design</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Stratix® 10 FPGA - Bootloader SDM Design for Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791158?explicitVersion=true&fileName=Stratix_10_FPGA_Bootloader_SDM_Design_for_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Mailbox Client Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791158/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791158?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "1SX280LU2F50E2VG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791158?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791162",
            "group_id": "776156",
            "revision": 4,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/g Processor-based Hello World design example on the Stratix® 10 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Stratix® 10 FPGA – \"Hello World\" on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791162?explicitVersion=true&fileName=Stratix_10_FPGA_Helloworld_Design_on_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791162/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791162?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "1SX280LU2F50E2VG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791162?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791168",
            "group_id": "776195",
            "revision": 4,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit (Production) DK-SOC-10AS066S-D",
            "description": "Nios® V/g Processor-based Hello World example design on the Arria® 10 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – \"Hello World\" on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791168?explicitVersion=true&fileName=Arria_10_FPGA_Helloworld_Design_on_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791168/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791168?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791168?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791177",
            "group_id": "776191",
            "revision": 4,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/g Processor-based Hello World example design on the Agilex™ 7 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880691/0EMDx0000009ebN.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Hello World on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791177?explicitVersion=true&fileName=Agilex7_FPGA_Helloworld_Design_on_NiosVg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791177/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791177?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791177?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791231",
            "group_id": "763967",
            "revision": 4,
            "title": "Simple Socket Server for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "This example design demonstrates communication with a telnet client on a development host PC.",
            "rich_description": "<p>The telnet client offers a convenient way of issuing commands over a TCP/IP socket to the Ethernet-connected μC/TCP-IP running on the development board with a simple TCP/IP socket server example. The socket server example receives commands sent over a TCP/IP connection and turns LEDs on and off according to the commands. The example consists of a socket server task that listens for commands on a TCP/IP port and dispatches those commands to a set of LED management tasks.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880590/0EMDx0000009eao.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.Please refer to the document for details about the design.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA - Simple Socket Server Design for Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791231?explicitVersion=true&fileName=Arria_10_FPGA_Simple_Socket_Server_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "Transceiver ATX PLL Intel Arria 10/Cyclone 10 FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791231/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791231?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791231?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791249",
            "group_id": "763965",
            "revision": 4,
            "title": "Bootloader GSFI for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "The Nios® V processor application is copied from the configuration QSPI flash to RAM using the boot copier (i.e., Generic Serial Flash Interface (GSFI) bootloader)",
            "rich_description": "<p>The GSFI bootloader is the Nios V processor boot copier that supports QSPI flash memory in control block-based devices.</p><p>The GSFI bootloader includes the following features:</p><ul><li>1. Locates the software application in non-volatile memory.</li><li>2. Unpacks and copies the software application image to RAM.</li><li>3. Automatically switches processor execution to application code in RAM after copy completes.</li></ul><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880589/0EMDx0000009eaj.png\"></p><p><br></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA - Bootloader GSFI Design  for Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791249?explicitVersion=true&fileName=Arria_10_FPGA_Bootloader_GSFI_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Generic Serial Flash Interface Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791249/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791249?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791249?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791260",
            "group_id": "763963",
            "revision": 9,
            "title": "SDM Bootloader for the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V Processor Application Copied from Configuration QSPI Flash to RAM Using Boot Copier (SDM Bootloader).",
            "rich_description": "<p>The Nios® V processor starts executing the boot copier upon system reset, which copies the application from the configuration quad serial peripheral interface (QSPI) to the internal RAM. Once this completes, the Nios V processor transfers the program control over to the application.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880588/0EMDx0000009eaZ.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Stratix® 10 FPGA – SDM Bootloader for the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791260?explicitVersion=true&fileName=Intel_Stratix_10_FPGA_Bootloader_SDM_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Mailbox Client Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791260/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791260?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "1SX280LU2F50E2VG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791260?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791375",
            "group_id": "763961",
            "revision": 4,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/m processor based Hello World design example on the Stratix® 10 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Stratix® 10 FPGA – \"Hello World\" on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791375?explicitVersion=true&fileName=Stratix_10_FPGA_Helloworld_Design_on_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791375/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791375?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "1SX280LU2F50E2VG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791375?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791454",
            "group_id": "763959",
            "revision": 4,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "Nios® V/m processor based Hello World example design on the Arria® 10 FPGA.",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – \"Hello World\" on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791454?explicitVersion=true&fileName=Arria_10_FPGA_Helloworld_Design_on_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791454/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791454?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791454?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791480",
            "group_id": "763955",
            "revision": 4,
            "title": "Nios® V Processor with DMA and OCM Design Examplexample",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example demonstrates the data transfer between the two on-chip memory (OCM) mapped to Nios® V processor through direct memory access (DMA).",
            "rich_description": "<p>This example design includes a <span style=\"color: rgb(68, 68, 68);\">Nios®</span> V/m embedded processor connected to the DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;The objective of the design is to accomplish a data transfer between the two On Chip RAM using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which is then read back by the processor.</p><p>The UART IP then prints the application output on the terminal.</p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/787037/0EMHu0000054mbR.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA - Nios® V Processor with DMA and OCM",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791480?explicitVersion=true&fileName=Agilex_7_FPGA_NiosVm_DMA_OCM.pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791480/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791480?explicitVersion=true&fileName=niosv_dma_ocm_to_ocm.par",
            "first_file_in_uam": "niosv_dma_ocm_to_ocm.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791480?explicitVersion=true&fileName=niosv_dma_ocm_to_ocm.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791484",
            "group_id": "763953",
            "revision": 5,
            "title": "Nios® V/m Processor OCM to OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example shows on-chip memory (OCM) access using Nios® V/m Processor.",
            "rich_description": "<p>This example design includes a Nios® V/m embedded processor connected to the OCM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to write and read into specific locations of On Chip RAM. This implementation of On Chip RAM uses the Avalon interface.&nbsp;&nbsp;</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/843875/0EM2f0000006mxs.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA - Nios® V Processor OCM to OCM",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791484?explicitVersion=true&fileName=Agilex_7_FPGA_Nios_Vm_OCM_to_OCM.pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791484/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791484?explicitVersion=true&fileName=aglx_niosv_ocm_mem_transfer.par",
            "first_file_in_uam": "aglx_niosv_ocm_mem_transfer.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791484?explicitVersion=true&fileName=aglx_niosv_ocm_mem_transfer.par",
            "Q_VALIDATED": true
        },
        {
            "id": "791506",
            "group_id": "763969",
            "revision": 4,
            "title": "II* RTOS with IPerf for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA – μC/OS",
            "quartus_version": "23.3",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "Perf 2 is a benchmarking tool for measuring performance between two systems, and it can be used as a server or a client.",
            "rich_description": "<p>An iPerf server receives an iPerf request sent over a TCP/IP connection from any iPerf clients and runs the iPerf test according to the provided arguments. Each test reports the bandwidth, loss, and other parameters.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880591/0EMDx0000009eat.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA - μC/OS-II RTOS with Iperf for Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791506?explicitVersion=true&fileName=Arria_10_FPGA_Iperf_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "altera_msgdma"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/791506/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/791506?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/791506?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "794791",
            "group_id": "763953",
            "revision": 4,
            "title": "Nios® V/m Processor OCM to OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example shows on-chip memory (OCM) access using Nios® V/m Processor.",
            "rich_description": "<p>This example design includes a Nios® V/m embedded processor connected to the OCM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to write and read into specific locations of On Chip RAM. This implementation of On Chip RAM uses the Avalon interface.&nbsp;&nbsp;</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/843875/0EM2f0000006mxs.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA – Nios® V Processor OCM to OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/794791?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_Nios_Vm_OCM_to_OCM.pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/794791/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/794791?explicitVersion=true&fileName=aglx_niosv_ocm_mem_transfer.par",
            "first_file_in_uam": "aglx_niosv_ocm_mem_transfer.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/794791?explicitVersion=true&fileName=aglx_niosv_ocm_mem_transfer.par",
            "Q_VALIDATED": true
        },
        {
            "id": "794805",
            "group_id": "763955",
            "revision": 4,
            "title": "Nios® V Processor with DMA and OCM Design Examplexample",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example demonstrates the data transfer between the two on-chip memory (OCM) mapped to Nios® V processor through direct memory access (DMA).",
            "rich_description": "<p>This example design includes a <span style=\"color: rgb(68, 68, 68);\">Nios®</span> V/m embedded processor connected to the DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;The objective of the design is to accomplish a data transfer between the two On Chip RAM using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which is then read back by the processor.</p><p>The UART IP then prints the application output on the terminal.</p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/787037/0EMHu0000054mbR.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - Nios® V Processor with DMA and OCM",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/794805?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_NiosVm_DMA_OCM.pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/794805/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/794805?explicitVersion=true&fileName=niosv_dma_ocm_to_ocm.par",
            "first_file_in_uam": "niosv_dma_ocm_to_ocm.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/794805?explicitVersion=true&fileName=niosv_dma_ocm_to_ocm.par",
            "Q_VALIDATED": true
        },
        {
            "id": "794810",
            "group_id": "763957",
            "revision": 4,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/m processor based Helloworld example design on the Intel Agilex® 7 FPGA.",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA – Hello World on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/794810?explicitVersion=true&fileName=Intel Agilex 7 FPGA - Helloworld Design on Nios Vm Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/794810/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/794810?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/794810?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "795573",
            "group_id": "789502",
            "revision": 4,
            "title": "CRC Custom Instruction Design on Nios® V/g processorg processor",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "23.4",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design demonstrates the Cyclic Redundancy Check (CRC) algorithm using the custom instruction feature of the Nios® V/g processor using Intel Agilex® 7 FPGA F-Series Development Kit.",
            "rich_description": "<p>A Processing Engine (PE) that performs the CRC algorithm is connected to the Nios® V/g processor using the custom instruction interface. The current version of the Nios® V/g processor custom instruction interface supports operations up-to 32-Bit.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880846/0EMDx0000009ebS.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - CRC Custom Instruction Design on Nios® V/g processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/795573?explicitVersion=true&fileName=Intel Agilex 7 FPGA Custom Instruction Design on Nios Vg processor CRC.pdf"
                }
            ],
            "ip_cores": [
                "NIOS V/g soft processor core",
                "On Chip RAM",
                "JTAG UART",
                "Custom PE CRC",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/795573/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/795573?explicitVersion=true&fileName=ci_crc.par",
            "first_file_in_uam": "ci_crc.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/795573?explicitVersion=true&fileName=ci_crc.par",
            "Q_VALIDATED": true
        },
        {
            "id": "795574",
            "group_id": "776271",
            "revision": 4,
            "title": "Custom Instruction on the Nios® V/g Processor Design Exampleign Example",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "23.4",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design demonstrates the custom instruction feature of the Nios® V/g processor using the Intel Agilex® 7 FPGA F-Series Development Kit.",
            "rich_description": "<p><span style=\"font-family: Calibri, sans-serif; font-size: 11pt;\">A Processing Engine (PE) that performs basic arithmetic and logical computations is connected to the&nbsp;</span>Nios®<span style=\"font-family: Calibri, sans-serif; font-size: 11pt;\">&nbsp;V/g processor using the custom instruction interface. The current version of the&nbsp;</span>Nios®<span style=\"font-family: Calibri, sans-serif; font-size: 11pt;\">&nbsp;V/g processor custom instruction interface supports operations up-to 32-Bit.&nbsp;</span></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/877529/0EM2f0000006sQ1.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p><p><br></p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA – Custom Instruction on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/795574?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_Custom_Instruction_Design_on_Nios_Vg_processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/795574/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/795574?explicitVersion=true&fileName=niosv_custom_instruction.par",
            "first_file_in_uam": "niosv_custom_instruction.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/795574?explicitVersion=true&fileName=niosv_custom_instruction.par",
            "Q_VALIDATED": true
        },
        {
            "id": "795580",
            "group_id": "776191",
            "revision": 4,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/g Processor-based Helloworld example design on the Intel Agilex® 7 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880691/0EMDx0000009ebN.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - Hello World Design on Nios® V/g Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/795580?explicitVersion=true&fileName=Intel_Agilex7_FPGA_Helloworld_Design_on_NiosVg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/795580/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/795580?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/795580?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "795821",
            "group_id": "763959",
            "revision": 4,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "Arria® 10 FPGA - Nios® V/m Processor based \"Hello World\" Design Example",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – \"Hello World\" on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/795821?explicitVersion=true&fileName=Arria_10_FPGA_Helloworld_Design_on_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/795821/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/795821?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/795821?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812233",
            "group_id": "763963",
            "revision": 6,
            "title": "SDM Bootloader for the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "Unknown",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V Processor Application for copying from Configuration QSPI Flash to RAM Using Boot Copier (SDM Bootloader).",
            "rich_description": "<p>The Nios® V processor starts executing the boot copier upon system reset, which copies the application from the configuration quad serial peripheral interface (QSPI) to the internal RAM. Once this completes, the Nios V processor transfers the program control over to the application.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880588/0EMDx0000009eaZ.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Stratix® 10 FPGA – SDM Bootloader for the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812233?explicitVersion=true&fileName=Intel_Stratix_10_FPGA_Bootloader_SDM_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Mailbox Client Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812233/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812233?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "1SX280LU2F50E2VG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812233?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812296",
            "group_id": "763965",
            "revision": 4,
            "title": "Bootloader GSFI for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "The Nios® V processor application is copied from the configuration QSPI flash to RAM using the boot copier i.e., Generic Serial Flash Interface (GSFI) bootloader",
            "rich_description": "<p>The GSFI bootloader is the Nios V processor boot copier that supports QSPI flash memory in control block-based devices.</p><p>The GSFI bootloader includes the following features:</p><ul><li>1. Locates the software application in non-volatile memory.</li><li>2. Unpacks and copies the software application image to RAM.</li><li>3. Automatically switches processor execution to application code in RAM after copy completes.</li></ul><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880589/0EMDx0000009eaj.png\"></p><p><br></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – Bootloader GSFI for the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812296?explicitVersion=true&fileName=Arria_10_FPGA_Bootloader_GSFI_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Generic Serial Flash Interface Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812296/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812296?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812296?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812297",
            "group_id": "763967",
            "revision": 4,
            "title": "Simple Socket Server for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "This example design demonstrates communication with a telnet client on a development host PC.",
            "rich_description": "<p>The telnet client offers a convenient way of issuing commands over a TCP/IP socket to the Ethernet-connected μC/TCP-IP running on the development board with a simple TCP/IP socket server example. The socket server example receives commands sent over a TCP/IP connection and turns LEDs on and off according to the commands. The example consists of a socket server task that listens for commands on a TCP/IP port and dispatches those commands to a set of LED management tasks.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880590/0EMDx0000009eao.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.Please refer to the document for details about the design.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – Simple Socket Server for the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812297?explicitVersion=true&fileName=Arria_10_FPGA_Simple_Socket_Server_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "Transceiver ATX PLL Intel Arria 10/Cyclone 10 FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812297/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812297?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812297?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812339",
            "group_id": "778750",
            "revision": 6,
            "title": "PAM4 8x53Gbps with QSFPDD Serial Loopback on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (ES1 2x F-Tile) DK-DEV-AGF027F1ES",
            "description": "This design demonstrates the serial loopback via QSFPDD on Agilex™ 7 FPGA F-Series Development Kit (2x F-Tile)",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880699/0EMDx0000009eay.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – PAM4 8x53Gbps with QSFPDD Serial Loopback on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812339?explicitVersion=true&fileName=Agilex_7_FPGA_PAM4_8x53Gpbs_with_QSFPDD_Serial_loopback_design_on_the_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "F-Tile PMA/FEC Direct PHY Intel FPGA IP",
                "Mailbox Client Intel FPGA IP",
                "Nios V/m Processor Intel FPGA IP",
                "F-Tile Reference and System PLL Clocks Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812339/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812339?explicitVersion=true&fileName=devkit_demo.par",
            "first_file_in_uam": "devkit_demo.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB027R24C2E2VR2",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812339?explicitVersion=true&fileName=devkit_demo.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812341",
            "group_id": "790773",
            "revision": 3,
            "title": "Nios® V/m Processor with DDR DMA and OCM Design Exampleample",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "23.4",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design performs data transfer between On-Chip Memory (OCM) and DDR via DMA.",
            "rich_description": "<p>This example design includes a NIOS®&nbsp;V/m embedded processor connected to the EMIF, DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to accomplish a data transfer between the On Chip RAM and the DDR (EMIF) using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which is then read back by the processor</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/883034/0EMDx0000009lSm.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - Nios® V/m Processor with DDR DMA and OCM",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812341?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_NiosV_Processor_with_DMA_DDR_OCM_Data_Mover_Test.pdf"
                }
            ],
            "ip_cores": [
                "NIOS® V/m soft processor core",
                "MSGDMA",
                "On Chip RAM",
                "JTAG UART"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812341/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812341?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812341?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812556",
            "group_id": "776195",
            "revision": 4,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit (Production) DK-SOC-10AS066S-D",
            "description": "Nios® V/g Processor-based Hello World example design on the Arria® 10 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – \"Hello World\" on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812556?explicitVersion=true&fileName=Arria_10_FPGA_Helloworld_Design_on_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812556/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812556?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812556?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812557",
            "group_id": "776156",
            "revision": 4,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/g Processor based Hello World design example on the Stratix® 10 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Stratix® 10 FPGA – \"Hello World\" on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812557?explicitVersion=true&fileName=Stratix_10_FPGA_Helloworld_Design_on_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812557/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812557?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "1SX280LU2F50E2VG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812557?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812558",
            "group_id": "776202",
            "revision": 4,
            "title": "SDM Bootloader for the Nios® V/g Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/g Processor Application Copied from Configuration QSPI Flash to RAM Using Boot Copier (SDM Bootloader)",
            "rich_description": "<p>The&nbsp;Nios® V&nbsp;processor starts executing the boot copier upon system reset, which copies the application from the configuration&nbsp;quad serial peripheral interface (QSPI) to the internal RAM. Once this completes, the Nios V/g processor transfers the program control over to the application.</p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850744/0EM2f0000006mlI.png\"></p><p><br></p><p>Please refer to the document for details about the design</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Stratix® 10 FPGA – SDM Bootloader for the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812558?explicitVersion=true&fileName=Stratix_10_FPGA_Bootloader_SDM_Design_for_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Mailbox Client Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812558/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812558?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "1SX280LU2F50E2VG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812558?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812705",
            "group_id": "776206",
            "revision": 4,
            "title": "Bootloader GSFI for the Nios® V/g Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit (Production) DK-SOC-10AS066S-D",
            "description": "The Nios® V/g processor application is copied from the configuration QSPI flash to RAM using the boot copier i.e., Generic Serial Flash Interface (GSFI) bootloader",
            "rich_description": "<p>The GSFI bootloader is the Nios®&nbsp;V/g processor boot copier that supports QSPI flash memory in control block-based devices. The GSFI bootloader includes the following features:</p><ol><li>Locates the software application in non-volatile memory.</li><li>Unpacks and copies the software application image to RAM.</li><li>Automatically switches processor execution to application code in RAM after copy completes.&nbsp;</li></ol><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850746/0EM2f0000006mlD.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GU</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – Bootloader GSFI for the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812705?explicitVersion=true&fileName=Arria_10_FPGA_Bootloader_GSFI_Design_for_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/g Processor Intel FPGA IP",
                "Generic Serial Flash Interface Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812705/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812705?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812705?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812706",
            "group_id": "776210",
            "revision": 4,
            "title": "Simple Socket Server for the Nios® V/g Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit (Production) DK-SOC-10AS066S-D",
            "description": "This design example demonstrates communication with a telnet client on a development host PC",
            "rich_description": "<p>The telnet client offers a convenient way of issuing commands over a TCP/IP socket to the Ethernet-connected μC/TCP-IP running on the development board with a simple TCP/IP socket server example. The socket server example receives commands sent over a TCP/IP connection and turns LEDs on and off according to the commands. The example consists of a socket server task that listens for commands on a TCP/IP port and dispatches those commands to a set of LED management tasks.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850748/0EM2f0000006mlN.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – Simple Socket Server for the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812706?explicitVersion=true&fileName=Arria_10_FPGA_Simple_Socket_Server_Design_for_Nios_Vg_processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "Transceiver ATX PLL Intel Arria 10/Cyclone 10 FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812706/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812706?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812706?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812712",
            "group_id": "776280",
            "revision": 3,
            "title": "IPerf Design for the Nios® V/g Processorg Processor",
            "source": "Design Store",
            "family": "Arria® 10",
            "quartus_version": "23.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit DK-SOC-10AS066S-A",
            "description": "Perf 2 is a benchmarking tool for measuring performance between two systems, and it can be used as a server or a client.",
            "rich_description": "<p>An iPerf server receives an iPerf request sent over a TCP/IP connection from any iPerf clients and runs the iPerf test according to the provided arguments. Each test reports the bandwidth, loss, and other parameters.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850750/0EM2f0000006mlS.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel® Arria® 10 FPGA - Iperf Design for Nios® V/g Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812712?explicitVersion=true&fileName=Intel_Arria_10_FPGA_Iperf_Design_for_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "altera_msgdma"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812712/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812712?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812712?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812721",
            "group_id": "790687",
            "revision": 3,
            "title": "Nios® V/c Processor with PIO and OCMd OCM",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "23.4",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example includes a Nios® V/c compact embedded processor connected to the Parallel Input Output (PIO) IP, On-Chip RAM  JTAG UART IP and System ID Peripheral core IP.",
            "rich_description": "<p>The objective of the design is to accomplish :</p><p>1.&nbsp;&nbsp;&nbsp;&nbsp;Toggle the PIO registers which in turn toggles the LED connected on dev kit and readback the registers</p><p>2.&nbsp;&nbsp;&nbsp;&nbsp;Write/Read to and from the On Chip memory connected to the embedded processor</p><p>3.&nbsp;&nbsp;&nbsp;&nbsp;Readback and print the System Peripheral core register to check of the value written in the IP during configuration</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/883037/0EMDx0000009lSr.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - Nios® V/c Processor with PIO and OCM",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812721?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_NiosVc_Processor_with_OCM_PIO_getting_started.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/c Compact Microcontroller Intel FPGA IP",
                "On Chip RAM-II",
                "JTAG UART",
                "System ID Peripheral Core",
                "Parallel Input Output"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812721/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812721?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812721?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812739",
            "group_id": "812731",
            "revision": 4,
            "title": "Nios® V/m Processor Timer Interval Interrupt Test Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "23.4",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example demonstrates an alarm-based interrupt to Nios® V/m embedded processor using Interval Timer IP",
            "rich_description": "<p>This design example includes a Nios® V/m embedded processor connected to the Interval Timer IP to issue alarm-based interrupt to the Nios V/m core.&nbsp;&nbsp;</p><p>The objective of the design is to demonstrate the interrupt behavior and handling by the Nios V/m embedded processor. Once the interrupt is issued; the Nios V/m prints the system ID of the SYS ID peripheral core.</p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/812739/0EMHu000006CMOC.png\"></p><p><br></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel Agilex® 7 FPGA - Nios® V/m Processor Timer Interval Interrupt Test Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812739?explicitVersion=true&fileName=Intel_Agilex7_FPGA_Nios_Vm_Processor_Timer_Interval_Interrupt_Test.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m soft processor core",
                "On Chip RAM - II",
                "JTAG UART",
                "SYSID",
                "Interval Timer"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812739/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812739?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812739?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "812742",
            "group_id": "763961",
            "revision": 5,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "23.4",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/m processor based Hello World design example on the Stratix® 10 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Stratix® 10 FPGA – \"Hello World\" on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812742?explicitVersion=true&fileName=Stratix_10_FPGA_Helloworld_Design_on_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/812742/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/812742?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "1SX280LU2F50E2VG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/812742?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "814060",
            "group_id": "763965",
            "revision": 4,
            "title": "Bootloader GSFI for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "The Nios® V processor application is copied from the configuration QSPI flash to RAM using the boot copier i.e., Generic Serial Flash Interface (GSFI) bootloader",
            "rich_description": "<p>The GSFI bootloader is the Nios® V processor boot copier that supports QSPI flash memory in control block-based devices.</p><p>The GSFI bootloader includes the following features:</p><ul><li>1. Locates the software application in non-volatile memory.</li><li>2. Unpacks and copies the software application image to RAM.</li><li>3. Automatically switches processor execution to application code in RAM after copy completes.</li></ul><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880589/0EMDx0000009eaj.png\"></p><p><br></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: <em style=\"color: black;\">The means to bring up the project template is through the New Project Wizard (File -&gt; New Project Wizard). After entering the project name and folder on the first panel, the second panel will ask you to specify an empty project or project template. Select project template. You will see a list of Design Templates projects that you have loaded prior as well as various \"Baseline Pinout Designs\" that contain the pinout and settings for a variety of development kits. If you don't see your design template in the list, click on the link that states install the Design Templates circled below:</em></p><p><span style=\"font-size: 12pt; font-family: Tahoma, sans-serif; color: rgb(38, 38, 38);\">&nbsp;</span></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/814060/0EMHu000005512B.png\"></p><p><span style=\"font-size: 12pt; font-family: Tahoma, sans-serif; color: rgb(38, 38, 38);\">&nbsp;</span></p><p><em style=\"color: black;\">Browse to the &lt;project&gt;.par file you downloaded, click ok and your design template will be installed. Click Cancel. Go to File -&gt; Open. Double click on &lt;project_name&gt;.qar. The extracted quartus project file will be opened.</em></p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – Bootloader GSFI for the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/814060?explicitVersion=true&fileName=Arria_10_FPGA_Bootloader_GSFI_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Generic Serial Flash Interface Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/814060/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/814060?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/814060?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "814787",
            "group_id": "763967",
            "revision": 4,
            "title": "Simple Socket Server for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "This example design demonstrates communication with a telnet client on a development host PC.",
            "rich_description": "<p>The telnet client offers a convenient way of issuing commands over a TCP/IP socket to the Ethernet-connected μC/TCP-IP running on the development board with a simple TCP/IP socket server example. The socket server example receives commands sent over a TCP/IP connection and turns LEDs on and off according to the commands. The example consists of a socket server task that listens for commands on a TCP/IP port and dispatches those commands to a set of LED management tasks.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880590/0EMDx0000009eao.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong style=\"color: rgb(68, 68, 68);\">Note</strong><span style=\"color: rgb(68, 68, 68);\">: </span><em style=\"color: black;\">The means to bring up the project template is through the New Project Wizard (File -&gt; New Project Wizard). After entering the project name and folder on the first panel, the second panel will ask you to specify an empty project or project template. Select project template. You will see a list of Design Templates projects that you have loaded prior as well as various \"Baseline Pinout Designs\" that contain the pinout and settings for a variety of development kits. If you don't see your design template in the list, click on the link that states install the Design Templates circled below:</em></p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/814787/0EMHu00000551te.png\"></p><p><br></p><p><em style=\"color: black;\">Browse to the &lt;project&gt;.par file you downloaded, click ok and your design template will be installed. Click Cancel. Go to File -&gt; Open. Double click on &lt;project_name&gt;.qar. The extracted quartus project file will be opened.</em></p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – Simple Socket Server for the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/814787?explicitVersion=true&fileName=Intel_Arria_10_FPGA_Simple_Socket_Server_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "Transceiver ATX PLL Intel Arria 10/Cyclone 10 FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/814787/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/814787?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/814787?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "814792",
            "group_id": "763969",
            "revision": 4,
            "title": "II* RTOS with IPerf for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA – μC/OS",
            "quartus_version": "23.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "Perf 2 is a benchmarking tool for measuring performance between two systems, and it can be used as a server or a client.",
            "rich_description": "<p>An iPerf server receives an iPerf request sent over a TCP/IP connection from any iPerf clients and runs the iPerf test according to the provided arguments. Each test reports the bandwidth, loss, and other parameters.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880591/0EMDx0000009eat.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong style=\"color: rgb(68, 68, 68);\">Note</strong><span style=\"color: rgb(68, 68, 68);\">: </span><em style=\"color: black;\">The means to bring up the project template is through the New Project Wizard (File -&gt; New Project Wizard). After entering the project name and folder on the first panel, the second panel will ask you to specify an empty project or project template. Select project template. You will see a list of Design Templates projects that you have loaded prior as well as various \"Baseline Pinout Designs\" that contain the pinout and settings for a variety of development kits. If you don't see your design template in the list, click on the link that states install the Design Templates circled below:</em></p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/814792/0EMHu00000551tj.png\"></p><p><br></p><p><em style=\"color: black;\">Browse to the &lt;project&gt;.par file you downloaded, click ok and your design template will be installed. Click Cancel. Go to File -&gt; Open. Double click on &lt;project_name&gt;.qar. The extracted quartus project file will be opened.</em></p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – μC/OS-II* RTOS with IPerf for the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/814792?explicitVersion=true&fileName=Arria_10_FPGA_Iperf_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "altera_msgdma"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/814792/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/814792?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/814792?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "815402",
            "group_id": "815401",
            "revision": 4,
            "title": "Helloworld on Nios® V/c Processor Design Example",
            "source": "Design Store",
            "family": "MAX® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® MAX® 10 FPGA Development Kit Version C DK-DEV-10M50-C",
            "description": "Nios® V/c Processor-based Helloworld design example on the MAX® 10 FPGA",
            "rich_description": "<p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/815402/0EMHu00000552Vd.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: <em style=\"color: black;\">The means to bring up the project template is through the New Project Wizard (File -&gt; New Project Wizard). After entering the project name and folder on the first panel, the second panel will ask you to specify an empty project or project template. Select project template. You will see a list of Design Templates projects that you have loaded prior as well as various \"Baseline Pinout Designs\" that contain the pinout and settings for a variety of development kits. If you don't see your design template in the list, click on the link that states install the Design Templates circled below:</em></p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/815402/0EMHu00000552Vi.png\"></p><p><em style=\"color: black;\">Browse to the &lt;project&gt;.par file you downloaded, click ok and your design template will be installed. Click Cancel. Go to File -&gt; Open. Double click on &lt;project_name&gt;.qar. The extracted quartus project file will be opened.</em></p><p><br></p>",
            "documentations": [
                {
                    "title": "Intel® MAX® 10 FPGA - Helloworld on Nios® V/c Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/815402?explicitVersion=true&fileName=Intel_Max_10 FPGA_Helloworld_Design_on_Nios_Vc_Processor.pdf"
                }
            ],
            "ip_cores": [
                "NIOS V/c soft processor core",
                "On Chip RAM",
                "JTAG UART"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/815402/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/815402?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10M50DAF484C6GES",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/815402?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "815404",
            "group_id": "815403",
            "revision": 5,
            "title": "Helloworld on Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "MAX® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® MAX® 10 FPGA Development Kit Version C DK-DEV-10M50-C",
            "description": "Nios® V/g Processor-based Helloworld design example on the MAX® 10 FPGA",
            "rich_description": "<p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/815404/0EMHu00000552Vn.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: <em style=\"color: black;\">The means to bring up the project template is through the New Project Wizard (File -&gt; New Project Wizard). After entering the project name and folder on the first panel, the second panel will ask you to specify an empty project or project template. Select project template. You will see a list of Design Templates projects that you have loaded prior as well as various \"Baseline Pinout Designs\" that contain the pinout and settings for a variety of development kits. If you don't see your design template in the list, click on the link that states install the Design Templates circled below:</em></p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/815404/0EMHu00000552Vs.png\"></p><p><br></p><p><em style=\"color: black;\">Browse to the &lt;project&gt;.par file you downloaded, click ok and your design template will be installed. Click Cancel. Go to File -&gt; Open. Double click on &lt;project_name&gt;.qar. The extracted quartus project file will be opened.</em></p>",
            "documentations": [
                {
                    "title": "Intel® MAX® 10 FPGA - Helloworld on Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/815404?explicitVersion=true&fileName=Intel_Max_10 FPGA_Helloworld_Design_on_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "NIOS V/g soft processor core",
                "On Chip RAM",
                "JTAG UART"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/815404/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/815404?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10M50DAF484C6GES",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/815404?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "815406",
            "group_id": "815405",
            "revision": 4,
            "title": "Helloworld on Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "MAX® 10 FPGA",
            "quartus_version": "23.1",
            "devkit": "Intel® MAX® 10 FPGA Development Kit Version C DK-DEV-10M50-C",
            "description": "Nios® V/m Processor-based Hello world design example on the  MAX® 10 FPGA",
            "rich_description": "<p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/815406/0EMHu00000552W2.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: <em style=\"color: black;\">The means to bring up the project template is through the New Project Wizard (File -&gt; New Project Wizard). After entering the project name and folder on the first panel, the second panel will ask you to specify an empty project or project template. Select project template. You will see a list of Design Templates projects that you have loaded prior as well as various \"Baseline Pinout Designs\" that contain the pinout and settings for a variety of development kits. If you don't see your design template in the list, click on the link that states install the Design Templates circled below:</em></p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/815406/0EMHu00000552W7.png\"></p><p><em style=\"color: black;\">Browse to the &lt;project&gt;.par file you downloaded, click ok and your design template will be installed. Click Cancel. Go to File -&gt; Open. Double click on &lt;project_name&gt;.qar. The extracted quartus project file will be opened.</em></p><p><br></p>",
            "documentations": [
                {
                    "title": "Intel® MAX® 10 FPGA - Helloworld on Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/815406?explicitVersion=true&fileName=Intel_Max_10 FPGA_Helloworld_Design_on_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "NIOS V/m soft processor core",
                "On Chip RAM",
                "JTAG UART"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/815406/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/815406?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": "",
            "device_part": "10M50DAF484C6GES",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/815406?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "816467",
            "group_id": "763969",
            "revision": 3,
            "title": "II* RTOS with IPerf for the Nios® V/m Processor Design ExampleExample",
            "source": "Design Store",
            "family": "Arria® 10 FPGA – μC/OS",
            "quartus_version": "23.4",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "Perf 2 is a benchmarking tool for measuring performance between two systems, and it can be used as a server or a client.",
            "rich_description": "<p>An iPerf server receives an iPerf request sent over a TCP/IP connection from any iPerf clients and runs the iPerf test according to the provided arguments. Each test reports the bandwidth, loss, and other parameters.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880591/0EMDx0000009eat.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Intel® Arria® 10 FPGA – IPerf Design for the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/816467?explicitVersion=true&fileName=Intel_Arria_10_FPGA_Iperf_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "altera_msgdma"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/816467/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/816467?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/816467?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "817314",
            "group_id": "817313",
            "revision": 4,
            "title": "Tile PCIe Lane Margining Tool Design Example",
            "source": "Design Store",
            "family": "Intel Agilex® 7 FPGA R",
            "quartus_version": "23.2",
            "devkit": "Intel Agilex® 7 FPGA I-Series Development Kit (ES1 2x R-Tile & 1x F-Tile) DK-DEV-AGI027R1BES",
            "description": "This design enables a user to perform lane margining on the R-Tile PCIe HIP. Control to the design is supported by the PCIe link itself.  A small application will need to be developed to configure, launch, and retrieve lane margining results. Pseudo code is included in this user guide as an example for the application. The small application is based on the PCIe Linux Kernel driver that ships with our R-Tile PCIe PIO Design Example.  There are two major components to this tool: FPGA RTL Design and the lane margining algorithm written in C++.  The solution includes source code.  The source code will allow a user to customize the tool for their specific R-Tile use case.",
            "rich_description": "<p><span style=\"font-size: 10pt; font-family: Verdana, sans-serif;\">PCIe Lane Margining Design Block Diagram:</span></p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/817314/0EMHu0000055542.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA R-Tile PCIe Lane Margining Tool Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/817314?explicitVersion=true&fileName=rtile_pcie_lane_margin_ug_v1.2.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/817314/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/817314?explicitVersion=true&fileName=rtile_pcie_lane_margin_tool.par",
            "first_file_in_uam": "rtile_pcie_lane_margin_tool.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGIB027R29A1E2VR3",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/817314?explicitVersion=true&fileName=rtile_pcie_lane_margin_tool.par",
            "Q_VALIDATED": true
        },
        {
            "id": "821494",
            "group_id": "763953",
            "revision": 3,
            "title": "Nios® V/m Processor OCM to OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example shows on-chip memory (OCM) access using Nios® V/m Processor.",
            "rich_description": "<p>This example design includes a Nios® V/m embedded processor connected to the OCM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to write and read into specific locations of On Chip RAM. This implementation of On Chip RAM uses the Avalon interface.&nbsp;&nbsp;</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/843875/0EM2f0000006mxs.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Nios® V/m Processor OCM to OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/821494?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_Nios_Vm_OCM_to_OCM.pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/821494/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/821494?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/821494?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "821837",
            "group_id": "763959",
            "revision": 3,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "24.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "Arria® 10 FPGA - Nios® V/m Processor based Hello World Design Example",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – Hello World on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/821837?explicitVersion=true&fileName=Arria_10_FPGA_Helloworld_Design_on_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/821837/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/821837?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/821837?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "821838",
            "group_id": "763961",
            "revision": 3,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "24.1",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/m processor based Hello World design example on the Stratix® 10 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Stratix® 10 FPGA – Hello World on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/821838?explicitVersion=true&fileName=Stratix_10_FPGA_Helloworld_Design_on_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/821838/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/821838?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "1SX280LU2F50E2VG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/821838?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "822121",
            "group_id": "776191",
            "revision": 3,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/g Processor-based Hello World design example on the Agilex™ 7 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880691/0EMDx0000009ebN.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Hello World on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822121?explicitVersion=true&fileName=Agilex7_FPGA_Helloworld_Design_on_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/822121/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822121?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/822121?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "822125",
            "group_id": "776195",
            "revision": 3,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "24.1",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit (Production) DK-SOC-10AS066S-D",
            "description": "Nios® V/g Processor-based Hello World design example on the Arria® 10 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA - Hello World on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822125?explicitVersion=true&fileName=Arria_10_FPGA_Helloworld_Design_on_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/822125/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822125?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/822125?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "822130",
            "group_id": "776156",
            "revision": 3,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "24.1",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/g Processor based Hello World design example on the Stratix® 10 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Stratix® 10 FPGA - Hello World on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822130?explicitVersion=true&fileName=Stratix_10_FPGA_Helloworld_Design_on_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/822130/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822130?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "1SX280LU2F50E2VG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/822130?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "822133",
            "group_id": "778750",
            "revision": 4,
            "title": "PAM4 8x53Gbps with QSFPDD Serial Loopback on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (ES1 2x F-Tile) DK-DEV-AGF027F1ES",
            "description": "This design demonstrates the serial loopback via QSFPDD on Agilex™ 7 FPGA F-Series Development Kit (2x F-Tile)",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880699/0EMDx0000009eay.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – PAM4 8x53Gbps with QSFPDD Serial Loopback on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822133?explicitVersion=true&fileName=Agilex_7_FPGA_PAM4_8x53Gpbs_with_QSFPDD_Serial_loopback_design_on_the_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "F-Tile PMA/FEC Direct PHY Intel FPGA IP",
                "Mailbox Client Intel FPGA IP",
                "Nios V/m Processor Intel FPGA IP",
                "F-Tile Reference and System PLL Clocks Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/822133/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822133?explicitVersion=true&fileName=devkit_demo.par",
            "first_file_in_uam": "devkit_demo.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB027R24C2E2VR2",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/822133?explicitVersion=true&fileName=devkit_demo.par",
            "Q_VALIDATED": true
        },
        {
            "id": "822147",
            "group_id": "790687",
            "revision": 3,
            "title": "Nios® V/c Processor with PIO and OCMd OCM",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "24.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example includes a Nios® V/c compact embedded processor connected to the Parallel Input Output (PIO) IP, On-Chip RAM  JTAG UART IP and System ID Peripheral core IP.",
            "rich_description": "<p>The objective of the design is to accomplish :</p><p>1.&nbsp;&nbsp;&nbsp;&nbsp;Toggle the PIO registers which in turn toggles the LED connected on dev kit and readback the registers</p><p>2.&nbsp;&nbsp;&nbsp;&nbsp;Write/Read to and from the On Chip memory connected to the embedded processor</p><p>3.&nbsp;&nbsp;&nbsp;&nbsp;Readback and print the System Peripheral core register to check of the value written in the IP during configuration</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/883037/0EMDx0000009lSr.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA - Nios® V/c Processor with PIO and OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822147?explicitVersion=true&fileName=Agilex_7_FPGA_NiosVc_Processor_with_OCM_PIO_getting_started.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/c Compact Microcontroller Intel FPGA IP",
                "On Chip RAM-II",
                "JTAG UART",
                "System ID Peripheral Core",
                "Parallel Input Output"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/822147/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822147?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/822147?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "822263",
            "group_id": "790773",
            "revision": 3,
            "title": "Nios® V/m Processor with DDR DMA and OCM Design Exampleample",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "24.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design performs data transfer between On-Chip Memory (OCM) and DDR via DMA.",
            "rich_description": "<p>This example design includes a NIOS®&nbsp;V/m embedded processor connected to the EMIF, DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to accomplish a data transfer between the On Chip RAM and the DDR (EMIF) using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which is then read back by the processor</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/883034/0EMDx0000009lSm.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA - Nios® V/m Processor with DDR DMA and OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822263?explicitVersion=true&fileName=Agilex_7_FPGA_NiosV_Processor_with_DMA_DDR_OCM_Data_Mover_Test.pdf"
                }
            ],
            "ip_cores": [
                "NIOS® V/m soft processor core",
                "MSGDMA",
                "On Chip RAM",
                "JTAG UART"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/822263/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/822263?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/822263?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "823132",
            "group_id": "822264",
            "revision": 3,
            "title": "Nios® V/m Processor with DMA and OCM Design Exampleample",
            "source": "Design Store",
            "family": "Agilex™ 5",
            "quartus_version": "24.1",
            "devkit": "Intel Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1",
            "description": "This design example demonstrates the data transfer between the two on-chip memory (OCM) mapped to the Nios® V processor through direct memory access (DMA).",
            "rich_description": "<p>This design example includes a NIOS V/m embedded processor connected to the DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;The objective of the design is to accomplish a data transfer between the two On Chip RAM using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which is then read back by the processor.</p><p>The UART IP then prints the application output on the terminal.</p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/823132/0EMHu000006ByKP.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 5 FPGA - Nios® V/m Processor with DMA and OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/823132?explicitVersion=true&fileName=Agilex_5_FPGA_Nios_Vm_DMA_OCM.pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart",
                "MSGDMA"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/823132/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/823132?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "A5ED065BB32AE6SR0",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/823132?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "823227",
            "group_id": "823226",
            "revision": 3,
            "title": "Hello World and OCM Memory Test Design Example on Nios® V/m Processoressor",
            "source": "Design Store",
            "family": "Agilex™ 5",
            "quartus_version": "24.1",
            "devkit": "Intel Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1",
            "description": "Nios® V/m processor-based Hello World and OCM memory test design example on the Agilex™ 5 FPGA",
            "rich_description": "<p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/823227/0EMHu000006ByMW.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 5 FPGA - Hello World and OCM Memory Test Design Example on Nios® V/m Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/823227?explicitVersion=true&fileName=Agilex 5 FPGA Helloworld and OCM memory test Design on Nios Vm Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP",
                "On Chip RAM-II",
                "JTAG UART",
                "System ID"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/823227/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/823227?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "A5ED065BB32AE6SR0",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/823227?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "823300",
            "group_id": "823299",
            "revision": 3,
            "title": "Nios® V/m PIO LED Toggle Design Exampleample",
            "source": "Design Store",
            "family": "Agilex™ 5",
            "quartus_version": "24.1",
            "devkit": "Intel Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1",
            "description": "This design demonstrates the transaction between the Nios® V processor and the PIO core.",
            "rich_description": "<p><span style=\"color: rgb(68, 68, 68);\">The PIO core is configured for output ports only and the outputs are connected to the LED on the development kit. The application,&nbsp;which runs atop this design,&nbsp;toggles these output registers of the PIO core. The application writes and reads back the content from the IP location.&nbsp;</span></p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/823300/0EMHu000006BySc.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 5 FPGA - Nios® V/m PIO LED Toggle Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/823300?explicitVersion=true&fileName=Agilex5_FPGA_Nios_Vm_PIO_LED_Toggle_Design.pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart",
                "PIO IP",
                "System ID"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/823300/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/823300?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "A5ED065BB32AE6SR0",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/823300?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "823302",
            "group_id": "823301",
            "revision": 4,
            "title": "Hello World on Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 5",
            "quartus_version": "24.1",
            "devkit": "Intel Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1",
            "description": "Nios® V/g Processor-based Hello World Design Example on the Agilex™ 5 FPGA.",
            "rich_description": "<p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/823302/0EMHu000006BySh.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 5 FPGA - Hello World on Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/823302?explicitVersion=true&fileName=Agilex_5_FPGA_Helloworld_Design_on_NiosVg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart",
                "System ID"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/823302/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/823302?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "A5ED065BB32AE6SR0",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/823302?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "823304",
            "group_id": "823303",
            "revision": 3,
            "title": "Nios® V/g Processor OCM to OCM Design Exampleample",
            "source": "Design Store",
            "family": "Agilex™ 5",
            "quartus_version": "24.1",
            "devkit": "Intel Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1",
            "description": "This design example shows on-chip memory (OCM) access using the Nios® V/g processor",
            "rich_description": "<p>This example design includes a Nios V/g embedded processor connected to the OCM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to write and read into specific locations of On Chip RAM. This implementation of On Chip RAM uses the Avalon interface.&nbsp;&nbsp;</p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/823304/0EMHu000006BySm.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 5 FPGA - Nios® V/g Processor OCM to OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/823304?explicitVersion=true&fileName=Agilex_5_FPGA_Nios_Vg_OCM_to_OCM.pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - G Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart",
                "System ID"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/823304/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/823304?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "A5ED065BB32AE6SR0",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/823304?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837383",
            "group_id": "763965",
            "revision": 3,
            "title": "Bootloader GSFI for the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "24.2",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "The Nios® V processor application is copied from the configuration QSPI flash to RAM using the boot copier i.e., Generic Serial Flash Interface (GSFI) bootloader",
            "rich_description": "<p>The GSFI bootloader is the Nios V processor boot copier that supports QSPI flash memory in control block-based devices.</p><p>The GSFI bootloader includes the following features:</p><ul><li>1. Locates the software application in non-volatile memory.</li><li>2. Unpacks and copies the software application image to RAM.</li><li>3. Automatically switches processor execution to application code in RAM after copy completes.</li></ul><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880589/0EMDx0000009eaj.png\"></p><p><br></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – Bootloader GSFI for the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837383?explicitVersion=true&fileName=Arria_10_FPGA_Bootloader_GSFI_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Generic Serial Flash Interface Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837383/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837383?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837383?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837384",
            "group_id": "763967",
            "revision": 5,
            "title": "Simple Socket Server for the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "24.2",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "This example design demonstrates communication with a telnet client on a development host PC.",
            "rich_description": "<p>The telnet client offers a convenient way of issuing commands over a TCP/IP socket to the Ethernet-connected μC/TCP-IP running on the development board with a simple TCP/IP socket server example. The socket server example receives commands sent over a TCP/IP connection and turns LEDs on and off according to the commands. The example consists of a socket server task that listens for commands on a TCP/IP port and dispatches those commands to a set of LED management tasks.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880590/0EMDx0000009eao.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.Please refer to the document for details about the design.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – Simple Socket Server for the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837384?explicitVersion=true&fileName=Intel_Arria_10_FPGA_Simple_Socket_Server_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "Transceiver ATX PLL Intel Arria 10/Cyclone 10 FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837384/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837384?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837384?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837386",
            "group_id": "776280",
            "revision": 3,
            "title": "IPerf Design for the Nios® V/g Processor",
            "source": "Design Store",
            "family": "Arria® 10",
            "quartus_version": "24.2",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit DK-SOC-10AS066S-A",
            "description": "Perf 2 is a benchmarking tool for measuring performance between two systems, and it can be used as a server or a client.",
            "rich_description": "<p>An iPerf server receives an iPerf request sent over a TCP/IP connection from any iPerf clients and runs the iPerf test according to the provided arguments. Each test reports the bandwidth, loss, and other parameters.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850750/0EM2f0000006mlS.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10  – IPerf Design for the Nios® V/g Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837386?explicitVersion=true&fileName=Intel_Arria_10_FPGA_Iperf_Design_for_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "altera_msgdma"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837386/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837386?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837386?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837387",
            "group_id": "776202",
            "revision": 3,
            "title": "SDM Bootloader for the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Stratix® 10 FPGA",
            "quartus_version": "24.2",
            "devkit": "Intel® Stratix® 10 SX SoC Development Kits",
            "description": "Nios® V/g Processor Application Copied from Configuration QSPI Flash to RAM Using Boot Copier (SDM Bootloader)",
            "rich_description": "<p>The&nbsp;Nios® V&nbsp;processor starts executing the boot copier upon system reset, which copies the application from the configuration&nbsp;quad serial peripheral interface (QSPI) to the internal RAM. Once this completes, the Nios V/g processor transfers the program control over to the application.</p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850744/0EM2f0000006mlI.png\"></p><p><br></p><p>Please refer to the document for details about the design</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Stratix® 10 FPGA – SDM Bootloader for the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837387?explicitVersion=true&fileName=Stratix_10_FPGA_Bootloader_SDM_Design_for_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Mailbox Client Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837387/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837387?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "1SX280LU2F50E2VG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837387?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837389",
            "group_id": "776206",
            "revision": 3,
            "title": "Bootloader GSFI for the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "24.2",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit (Production) DK-SOC-10AS066S-D",
            "description": "The Nios® V/g processor application is copied from the configuration QSPI flash to RAM using the boot copier i.e., Generic Serial Flash Interface (GSFI) bootloader",
            "rich_description": "<p>The GSFI bootloader is the Nios®&nbsp;V/g processor boot copier that supports QSPI flash memory in control block-based devices. The GSFI bootloader includes the following features:</p><ol><li>Locates the software application in non-volatile memory.</li><li>Unpacks and copies the software application image to RAM.</li><li>Automatically switches processor execution to application code in RAM after copy completes.&nbsp;</li></ol><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850746/0EM2f0000006mlD.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GU</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – Bootloader GSFI for the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837389?explicitVersion=true&fileName=Intel_Arria_10_FPGA_Bootloader_GSFI_Design_for_Nios_Vg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios® V/g Processor Intel FPGA IP",
                "Generic Serial Flash Interface Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837389/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837389?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837389?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837391",
            "group_id": "776210",
            "revision": 2,
            "title": "Simple Socket Server for the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA",
            "quartus_version": "24.2",
            "devkit": "Intel® Arria® 10 SX SoC Development Kit (Production) DK-SOC-10AS066S-D",
            "description": "This design example demonstrates communication with a telnet client on a development host PC",
            "rich_description": "<p>The telnet client offers a convenient way of issuing commands over a TCP/IP socket to the Ethernet-connected μC/TCP-IP running on the development board with a simple TCP/IP socket server example. The socket server example receives commands sent over a TCP/IP connection and turns LEDs on and off according to the commands. The example consists of a socket server task that listens for commands on a TCP/IP port and dispatches those commands to a set of LED management tasks.</p><p><br></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850748/0EM2f0000006mlN.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – Simple Socket Server for the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837391?explicitVersion=true&fileName=Intel_Arria_10_FPGA_Simple_Socket_Server_Design_for_Nios_Vg_processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "Transceiver ATX PLL Intel Arria 10/Cyclone 10 FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837391/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837391?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837391?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837392",
            "group_id": "776271",
            "revision": 3,
            "title": "Custom Instruction on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design demonstrates the custom instruction feature of the Nios® V/g processor using the Agilex™ 7 F-Series Development Kit.",
            "rich_description": "<p><span style=\"font-family: Calibri, sans-serif; font-size: 11pt;\">A Processing Engine (PE) that performs basic arithmetic and logical computations is connected to the&nbsp;</span>Nios®<span style=\"font-family: Calibri, sans-serif; font-size: 11pt;\">&nbsp;V/g processor using the custom instruction interface. The current version of the&nbsp;</span>Nios®<span style=\"font-family: Calibri, sans-serif; font-size: 11pt;\">&nbsp;V/g processor custom instruction interface supports operations up-to 32-Bit.&nbsp;</span></p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/877529/0EM2f0000006sQ1.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p><p><br></p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 – Custom Instruction on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837392?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_Custom_Instruction_Design_on_Nios_Vg_processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837392/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837392?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837392?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837394",
            "group_id": "789502",
            "revision": 2,
            "title": "CRC Custom Instruction Design on Nios® V/g processor",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design demonstrates the Cyclic Redundancy Check (CRC) algorithm using the custom instruction feature of the Nios® V/g processor using  Agilex™ 7 F-Series Development Kit.",
            "rich_description": "<p>A Processing Engine (PE) that performs the CRC algorithm is connected to the Nios® V/g processor using the custom instruction interface. The current version of the Nios® V/g processor custom instruction interface supports operations up-to 32-Bit.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880846/0EMDx0000009ebS.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 - CRC Custom Instruction Design on Nios® V/g processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837394?explicitVersion=true&fileName=Intel Agilex 7 FPGA Custom Instruction Design on Nios Vg processor CRC.pdf"
                }
            ],
            "ip_cores": [
                "NIOS V/g soft processor core",
                "On Chip RAM",
                "JTAG UART",
                "Custom PE CRC",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837394/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837394?explicitVersion=true&fileName=ci_crc.par",
            "first_file_in_uam": "ci_crc.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837394?explicitVersion=true&fileName=ci_crc.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837396",
            "group_id": "790773",
            "revision": 3,
            "title": "Nios® V/m Processor with DDR DMA and OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design performs data transfer between On-Chip Memory (OCM) and DDR via DMA.",
            "rich_description": "<p>This example design includes a NIOS®&nbsp;V/m embedded processor connected to the EMIF, DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to accomplish a data transfer between the On Chip RAM and the DDR (EMIF) using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which is then read back by the processor</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/883034/0EMDx0000009lSm.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 - Nios® V/m Processor with DDR DMA and OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837396?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_NiosV_Processor_with_DMA_DDR_OCM_Data_Mover_Test.pdf"
                }
            ],
            "ip_cores": [
                "NIOS® V/m soft processor core",
                "MSGDMA",
                "On Chip RAM",
                "JTAG UART"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837396/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837396?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837396?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837397",
            "group_id": "790687",
            "revision": 2,
            "title": "Nios® V/c Processor with PIO and OCM",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example includes a Nios® V/c compact embedded processor connected to the Parallel Input Output (PIO) IP, On-Chip RAM  JTAG UART IP and System ID Peripheral core IP.",
            "rich_description": "<p>The objective of the design is to accomplish :</p><p>1.&nbsp;&nbsp;&nbsp;&nbsp;Toggle the PIO registers which in turn toggles the LED connected on dev kit and readback the registers</p><p>2.&nbsp;&nbsp;&nbsp;&nbsp;Write/Read to and from the On Chip memory connected to the embedded processor</p><p>3.&nbsp;&nbsp;&nbsp;&nbsp;Readback and print the System Peripheral core register to check of the value written in the IP during configuration</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/883037/0EMDx0000009lSr.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 - Nios® V/c Processor with PIO and OCM",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837397?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_NiosVc_Processor_with_OCM_PIO_getting_started .pdf"
                }
            ],
            "ip_cores": [
                "Nios V/c Compact Microcontroller Intel FPGA IP",
                "On Chip RAM-II",
                "JTAG UART",
                "System ID Peripheral Core",
                "Parallel Input Output"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837397/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837397?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837397?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837399",
            "group_id": "812731",
            "revision": 3,
            "title": "Nios® V/m Processor Timer Interval Interrupt Test Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example demonstrates an alarm-based interrupt to Nios® V/m embedded processor using Interval Timer IP",
            "rich_description": "<p>This design example includes a Nios® V/m embedded processor connected to the Interval Timer IP to issue alarm-based interrupt to the Nios V/m core.&nbsp;&nbsp;</p><p>The objective of the design is to demonstrate the interrupt behavior and handling by the Nios V/m embedded processor. Once the interrupt is issued; the Nios V/m prints the system ID of the SYS ID peripheral core.</p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/837399/0EMHu000006CVXW.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 - Nios® V/m Processor Timer Interval Interrupt Test Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837399?explicitVersion=true&fileName=Intel_Agilex7_FPGA_Nios_Vm_Processor_Timer_Interval_Interrupt_Test.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m soft processor core",
                "On Chip RAM - II",
                "JTAG UART",
                "SYSID",
                "Interval Timer"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837399/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837399?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837399?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837402",
            "group_id": "763953",
            "revision": 3,
            "title": "Nios® V/m Processor OCM to OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example shows on-chip memory (OCM) access using Nios® V/m Processor.",
            "rich_description": "<p>This example design includes a Nios® V/m embedded processor connected to the OCM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to write and read into specific locations of On Chip RAM. This implementation of On Chip RAM uses the Avalon interface.&nbsp;&nbsp;</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/843875/0EM2f0000006mxs.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 – Nios® V/m Processor OCM to OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837402?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_Nios_Vm_OCM_to_OCM .pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837402/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837402?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837402?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837404",
            "group_id": "822264",
            "revision": 2,
            "title": "Nios® V/m Processor with DMA and OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 5",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1",
            "description": "This design example demonstrates the data transfer between the two on-chip memory (OCM) mapped to the Nios® V processor through direct memory access (DMA).",
            "rich_description": "<p>This design example includes a NIOS V/m embedded processor connected to the DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;The objective of the design is to accomplish a data transfer between the two On Chip RAM using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which is then read back by the processor.</p><p>The UART IP then prints the application output on the terminal.</p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/823132/0EMHu000006ByKP.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 5 - Nios® V/m Processor with DMA and OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837404?explicitVersion=true&fileName=Intel_Agilex_5_FPGA_Nios_Vm_DMA_OCM .pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart",
                "MSGDMA"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837404/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837404?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "A5ED065BB32AE6SR0",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837404?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837405",
            "group_id": "823226",
            "revision": 2,
            "title": "Hello World and OCM Memory Test Design Example on Nios® V/m Processor",
            "source": "Design Store",
            "family": "Agilex™ 5",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1",
            "description": "Nios® V/m processor-based Hello World and OCM memory test design example on the Agilex™ 5",
            "rich_description": "<p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/823227/0EMHu000006ByMW.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 5 - Hello World and OCM Memory Test Design Example on Nios® V/m Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837405?explicitVersion=true&fileName=Intel_Agilex_5_FPGA_Helloworld_and_OCM_memory_test_Design_on_Nios_Vm_Processor .pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP",
                "On Chip RAM-II",
                "JTAG UART",
                "System ID"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837405/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837405?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "A5ED065BB32AE6SR0",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837405?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837406",
            "group_id": "823299",
            "revision": 2,
            "title": "Nios® V/m PIO LED Toggle Design Example",
            "source": "Design Store",
            "family": "Agilex™ 5",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1",
            "description": "This design demonstrates the transaction between the Nios® V processor and the PIO core.",
            "rich_description": "<p><span style=\"color: rgb(68, 68, 68);\">The PIO core is configured for output ports only and the outputs are connected to the LED on the development kit. The application,&nbsp;which runs atop this design,&nbsp;toggles these output registers of the PIO core. The application writes and reads back the content from the IP location.&nbsp;</span></p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/823300/0EMHu000006BySc.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 5 - Nios® V/m PIO LED Toggle Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837406?explicitVersion=true&fileName=Intel_Agilex_5_FPGA_Nios_Vm_PIO_LED_Toggle_Design .pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart",
                "PIO IP",
                "System ID"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837406/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837406?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "A5ED065BB32AE6SR0",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837406?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837592",
            "group_id": "763969",
            "revision": 2,
            "title": "II* RTOS with IPerf for the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Arria® 10 FPGA – μC/OS",
            "quartus_version": "24.2",
            "devkit": "Intel® Arria® 10 SX SoC Development Kits",
            "description": "Perf 2 is a benchmarking tool for measuring performance between two systems, and it can be used as a server or a client.",
            "rich_description": "<p>An iPerf server receives an iPerf request sent over a TCP/IP connection from any iPerf clients and runs the iPerf test according to the provided arguments. Each test reports the bandwidth, loss, and other parameters.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880591/0EMDx0000009eat.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Arria® 10 FPGA – μC/OS-II* RTOS with IPerf for the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837592?explicitVersion=true&fileName=Intel_Arria_10_FPGA_Iperf_Design_for_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Triple-Speed Ethernet Intel FPGA IP",
                "altera_msgdma"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837592/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837592?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10AS066N3F40E2SG",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837592?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837719",
            "group_id": "823301",
            "revision": 3,
            "title": "Hello World on Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 5",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1",
            "description": "Nios® V/g Processor-based Hello World Design Example on the Agilex™ 5.",
            "rich_description": "<p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/823302/0EMHu000006BySh.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 5 - Hello World on Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837719?explicitVersion=true&fileName=Intel_Agilex_5_FPGA_Helloworld_Design_on_NiosVg_Processor .pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart",
                "System ID"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837719/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837719?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "A5ED065BB32AE6SR0",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837719?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "837721",
            "group_id": "823303",
            "revision": 1,
            "title": "Nios® V/g Processor OCM to OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 5",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1",
            "description": "This design example shows on-chip memory (OCM) access using the Nios® V/g processor",
            "rich_description": "<p>This example design includes a Nios V/g embedded processor connected to the OCM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to write and read into specific locations of On Chip RAM. This implementation of On Chip RAM uses the Avalon interface.&nbsp;&nbsp;</p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/823304/0EMHu000006BySm.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 5 - Nios® V/g Processor OCM to OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837721?explicitVersion=true&fileName=Intel_Agilex_5_FPGA_Nios_Vg_OCM_to_OCM .pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - G Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart",
                "System ID"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/837721/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/837721?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "A5ED065BB32AE6SR0",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/837721?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "838174",
            "group_id": "838173",
            "revision": 2,
            "title": "ECC Lite Example Design on Nios® V/g processor",
            "source": "Design Store",
            "family": "Agilex™  7",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design demonstrates the ECC Lite feature of the Nios® V/g core by injecting an error on\nthe General-Purpose Register (GPR) via simulation.",
            "rich_description": "<p>This design demonstrates the ECC Lite feature of the Nios® V/g core by injecting an error on the General-Purpose Register (GPR) via simulation.</p><p class=\"ql-indent-1\">• The ECC status and ECC source is observed for both correctable and uncorrectable errors on the General-Purpose Registers (GPR).</p><p class=\"ql-indent-1\">• The Error is injected on the OCM (M20k) GPR through the ECC parity flip feature (Link).</p><p class=\"ql-indent-1\">• The parity value in the GPR is flipped using the force command in the test bench file (sys_tb.v). (Pg. 64 in Link)</p><p class=\"ql-indent-1\">• The ECC Status and ECC Source signals are probed and observed using Questa Simulation&nbsp;</p><p class=\"ql-indent-1\"><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/838174/0EMHu000006CCLI.png\"></p>",
            "documentations": [
                {
                    "title": "Agilex® 7 - ECC Lite Example Design on Nios® V/g processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/838174?explicitVersion=true&fileName=Intel_Agilex_7 FPGA_Nios_Vg_ECC_Lite_Example_Design .pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g soft processor core",
                "On Chip RAM-II",
                "JTAG UART"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/838174/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/838174?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/838174?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "839408",
            "group_id": "776191",
            "revision": 6,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/g Processor-based Helloworld example design on the Agilex™ 7 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880691/0EMDx0000009ebN.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Hello World on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/839408?explicitVersion=true&fileName=Intel_Agilex7_FPGA_Helloworld_Design_on_NiosVg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/839408/a.html",
            "downloadUrl": "/home/vcap/app/unknown",
            "first_file_in_uam": "top.qar",
            "missing_par": true,
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "/home/vcap/app/unknown",
            "Q_VALIDATED": true
        },
        {
            "id": "839413",
            "group_id": "763957",
            "revision": 3,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/m processor-based Helloworld example design on the Agilex™ 7",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Hello World on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/839413?explicitVersion=true&fileName=Intel Agilex_7_FPGA_Helloworld_Design_on_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/839413/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/839413?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/839413?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "839416",
            "group_id": "763955",
            "revision": 1,
            "title": "Nios® V Processor with DMA and OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.2",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example demonstrates the data transfer between the two on-chip memory (OCM) mapped to Nios® V processor through direct memory access (DMA).",
            "rich_description": "<p>This example design includes a <span style=\"color: rgb(68, 68, 68);\">Nios®</span> V/m embedded processor connected to the DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;The objective of the design is to accomplish a data transfer between the two On Chip RAM using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which is then read back by the processor.</p><p>The UART IP then prints the application output on the terminal.</p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/787037/0EMHu0000054mbR.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Nios® V Processor with DMA and OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/839416?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_NiosVm_DMA_OCM.pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/839416/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/839416?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/839416?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "843177",
            "group_id": "763953",
            "revision": 1,
            "title": "Nios® V/m Processor OCM to OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example shows on-chip memory (OCM) access using Nios® V/m Processor.",
            "rich_description": "<p>This example design includes a Nios® V/m embedded processor connected to the OCM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to write and read into specific locations of On Chip RAM. This implementation of On Chip RAM uses the Avalon interface.&nbsp;&nbsp;</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/843875/0EM2f0000006mxs.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Nios® V/m Processor OCM to OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/843177?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_Nios_Vm_OCM_to_OCM .pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/843177/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/843177?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/843177?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "843487",
            "group_id": "790773",
            "revision": 2,
            "title": "Nios® V/m Processor with DDR DMA and OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "24.3.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design performs data transfer between On-Chip Memory (OCM) and DDR via DMA.",
            "rich_description": "<p>This example design includes a NIOS®&nbsp;V/m embedded processor connected to the EMIF, DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to accomplish a data transfer between the On Chip RAM and the DDR (EMIF) using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which is then read back by the processor</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/883034/0EMDx0000009lSm.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 - Nios® V/m Processor with DDR DMA and OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/843487?explicitVersion=true&fileName=Intel_Agilex_7_FPGA_NiosV_Processor_with_DMA_DDR_OCM_Data_Mover_Test.pdf"
                }
            ],
            "ip_cores": [
                "NIOS® V/m soft processor core",
                "MSGDMA",
                "On Chip RAM",
                "JTAG UART"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/843487/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/843487?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/843487?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "844484",
            "group_id": "778750",
            "revision": 1,
            "title": "PAM4 8x53Gbps with QSFPDD Serial Loopback on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (ES1 2x F-Tile) DK-DEV-AGF027F1ES",
            "description": "This design demonstrates the serial loopback via QSFPDD on Agilex™ 7 FPGA F-Series Development Kit (2x F-Tile)",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880699/0EMDx0000009eay.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – PAM4 8x53Gbps with QSFPDD Serial Loopback on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/844484?explicitVersion=true&fileName=Agilex_7_FPGA_PAM4_8x53Gpbs_with_QSFPDD_Serial_loopback_design_on_the_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "F-Tile PMA/FEC Direct PHY Intel FPGA IP",
                "Mailbox Client Intel FPGA IP",
                "Nios V/m Processor Intel FPGA IP",
                "F-Tile Reference and System PLL Clocks Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/844484/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/844484?explicitVersion=true&fileName=devkit_demo.par",
            "first_file_in_uam": "devkit_demo.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB027R24C2E2VR2",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/844484?explicitVersion=true&fileName=devkit_demo.par",
            "Q_VALIDATED": true
        },
        {
            "id": "844635",
            "group_id": "776191",
            "revision": 1,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/g Processor-based Helloworld example design on the Agilex™ 7 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880691/0EMDx0000009ebN.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Hello World on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/844635?explicitVersion=true&fileName=Intel_Agilex7_FPGA_Helloworld_Design_on_NiosVg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/844635/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/844635?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/844635?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "844640",
            "group_id": "763957",
            "revision": 1,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.3",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/m processor-based Helloworld example design on the Agilex™ 7",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Hello World on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/844640?explicitVersion=true&fileName=Intel Agilex_7_FPGA_Helloworld_Design_on_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/844640/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/844640?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/844640?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "847472",
            "group_id": "790773",
            "revision": 2,
            "title": "Nios® V/m Processor with DDR DMA and OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "24.3.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design performs data transfer between On-Chip Memory (OCM) and DDR via DMA.",
            "rich_description": "<p>This example design includes a NIOS®&nbsp;V/m embedded processor connected to the EMIF, DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;</p><p>The design's objective is to transfer data between the On Chip RAM and the DDR (EMIF) using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which the processor then reads back.</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/883034/0EMDx0000009lSm.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p>Note: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 - Nios® V/m Processor with DDR DMA and OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847472?explicitVersion=true&fileName=Agilex_7_FPGA_NiosV_Processor_with_DMA_DDR_OCM_Data_Mover_Test.pdf"
                }
            ],
            "ip_cores": [
                "NIOS® V/m soft processor core",
                "MSGDMA",
                "On Chip RAM",
                "JTAG UART"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/847472/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847472?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/847472?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "847480",
            "group_id": "763957",
            "revision": 1,
            "title": "Hello World on the Nios® V/m Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.3.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/m processor-based Helloworld example design on the Agilex™ 7",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/850752/0EM2f0000006mlm.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Hello World on the Nios® V/m Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847480?explicitVersion=true&fileName=Agilex_7_FPGA_Helloworld_Design_on_Nios_Vm_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/847480/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847480?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/847480?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "847482",
            "group_id": "776191",
            "revision": 1,
            "title": "Hello World on the Nios® V/g Processor Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.3.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "Nios® V/g Processor-based Helloworld example design on the Agilex™ 7 FPGA",
            "rich_description": "<p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/880691/0EMDx0000009ebN.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Hello World on the Nios® V/g Processor Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847482?explicitVersion=true&fileName=Agilex7_FPGA_Helloworld_Design_on_NiosVg_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g Processor Intel FPGA IP",
                "Configuration Clock Intel FPGA IP",
                "In-System Sources & Probes Intel FPGA IP"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/847482/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847482?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/847482?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "847483",
            "group_id": "763955",
            "revision": 1,
            "title": "Nios® V Processor with DMA and OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.3.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example demonstrates the data transfer between the two on-chip memory (OCM) mapped to Nios® V processor through direct memory access (DMA).",
            "rich_description": "<p>This example design includes a <span style=\"color: rgb(68, 68, 68);\">Nios®</span> V/m embedded processor connected to the DMA, On Chip RAM and JTAG UART IP.&nbsp;&nbsp;The objective of the design is to accomplish a data transfer between the two On Chip RAM using a DMA (MSGDMA) IP.&nbsp;&nbsp;</p><p>DMA facilitates the data transfer which is then read back by the processor.</p><p>The UART IP then prints the application output on the terminal.</p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/787037/0EMHu0000054mbR.png\"></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Nios® V Processor with DMA and OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847483?explicitVersion=true&fileName=Agilex_7_FPGA_NiosVm_DMA_OCM.pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/847483/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847483?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/847483?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "847486",
            "group_id": "812731",
            "revision": 3,
            "title": "Nios® V/m Processor Timer Interval Interrupt Test Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7",
            "quartus_version": "24.3.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example demonstrates an alarm-based interrupt to Nios® V/m embedded processor using Interval Timer IP",
            "rich_description": "<p>This design example includes a Nios® V/m embedded processor connected to the Interval Timer IP to issue alarm-based interrupt to the Nios V/m core.&nbsp;&nbsp;</p><p>The objective of the design is to demonstrate the interrupt behavior and handling by the Nios V/m embedded processor. Once the interrupt is issued; the Nios V/m prints the system ID of the SYS ID peripheral core.</p><p><br></p><p><img src=\"https://d38qgoih8yqk8x.cloudfront.net/PROD/images/847486/0EMHu000006CMOH.png\"></p><p><br></p><p>Please refer to the document for details about the design.</p><p><strong>Prepare the design template in the Quartus Prime software GUI</strong></p><p><strong>Note</strong>: After downloading the design example, you must prepare the design template. The file you downloaded is of the form of a &lt;project&gt;.par file which contains a compressed version of your design files (similar to a .qar file) and metadata describing the project. The combination of this information is what constitutes a &lt;project&gt;.par file. You can simply double click on the &lt;project&gt;.par file and Quartus will launch that project.</p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 - Nios® V/m Processor Timer Interval Interrupt Test Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847486?explicitVersion=true&fileName=Agilex7_FPGA_Nios_Vm_Processor_Timer_Interval_Interrupt_Test.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m soft processor core",
                "On Chip RAM - II",
                "JTAG UART",
                "SYSID",
                "Interval Timer"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/847486/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847486?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/847486?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "847488",
            "group_id": "763953",
            "revision": 1,
            "title": "Nios® V/m Processor OCM to OCM Design Example",
            "source": "Design Store",
            "family": "Agilex™ 7 FPGA",
            "quartus_version": "24.3.1",
            "devkit": "Intel Agilex® 7 FPGA F-Series Development Kit (Production 1 P-Tile & E-Tile) DK-DEV-AGF014EA",
            "description": "This design example shows on-chip memory (OCM) access using Nios® V/m Processor.",
            "rich_description": "<p>This example design includes a Nios® V/m embedded processor connected to the OCM and JTAG UART IP.&nbsp;&nbsp;</p><p>The objective of the design is to write and read into specific locations of On Chip RAM. This implementation of On Chip RAM uses the Avalon interface.&nbsp;&nbsp;</p><p><br></p><p><img src=\"https://d1ikhsln0txzml.cloudfront.net/QA/images/843875/0EM2f0000006mxs.png\"></p><p><br></p><p><br></p>",
            "documentations": [
                {
                    "title": "Agilex™ 7 FPGA – Nios® V/m Processor OCM to OCM Design Example",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847488?explicitVersion=true&fileName=Agilex_7_FPGA_Nios_Vm_OCM_to_OCM.pdf"
                }
            ],
            "ip_cores": [
                "Nios V Soft Processor FPGA IP - M Core",
                "altera_avalon_onchip_memory2",
                "altera_avalon_jtag_uart"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/847488/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/847488?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "AGFB014R24B2E2V",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/847488?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "850271",
            "group_id": "850270",
            "revision": 3,
            "title": "Helloworld Design and OCM test on Nios® V/m Processor",
            "source": "Design Store",
            "family": "Max® 10 FPGA",
            "quartus_version": "24.1",
            "devkit": "Intel® MAX® 10 FPGA Development Kit (Version C) DK-DEV-10M50-C",
            "description": "Nios® V/m Processor-based Helloworld and OCM memory test example design on the Max® 10 FPGA.",
            "rich_description": "<p><br></p><p><span style=\"font-size: 12.18px; font-family: Roboto, &quot;Helvetica Neue&quot;, sans-serif; color: rgba(0, 0, 0, 0.87);\"><img src=\"https://hsdes.intel.com/rest/binary/16026999856\"></span></p>",
            "documentations": [
                {
                    "title": "Max® 10 FPGA - Helloworld Design and OCM test on Nios® V/m Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/850271?explicitVersion=true&fileName=Max®_10_FPGA_Helloworld_and_OCM_test_design_on_Nios®V_m_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/m soft processor core"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/850271/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/850271?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10M50DAF484C6GES",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/850271?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "850278",
            "group_id": "850276",
            "revision": 2,
            "title": "Helloworld Design and OCM test on Nios® V/g Processor",
            "source": "Design Store",
            "family": "Max® 10 FPGA",
            "quartus_version": "24.1",
            "devkit": "Intel® MAX® 10 FPGA Development Kit (Version C) DK-DEV-10M50-C",
            "description": "Nios® V/g Processor-based Helloworld and OCM memory test example design on the Max® 10 FPGA.",
            "rich_description": "<p><br></p><p><span style=\"font-size: 12.18px; font-family: Roboto, &quot;Helvetica Neue&quot;, sans-serif; color: rgba(0, 0, 0, 0.87);\"><img src=\"https://hsdes.intel.com/rest/binary/16026999863\"></span></p>",
            "documentations": [
                {
                    "title": "Max® 10 FPGA - Helloworld Design and OCM test on Nios® V/g Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/850278?explicitVersion=true&fileName=Max®_10_FPGA_Helloworld_and_OCM_test_design_on_Nios®V_g_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/g soft processor core"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/850278/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/850278?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10M50DAF484C6GES",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/850278?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "850281",
            "group_id": "850280",
            "revision": 3,
            "title": "Helloworld Design and OCM test on Nios® V/c Processor",
            "source": "Design Store",
            "family": "Max® 10 FPGA",
            "quartus_version": "24.1",
            "devkit": "Intel® MAX® 10 FPGA Development Kit (Version C) DK-DEV-10M50-C",
            "description": "Nios® V/c Processor-based Helloworld and OCM memory test example design on the Max® 10 FPGA.",
            "rich_description": "<p><span style=\"font-size: 12px; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;\">&nbsp;</span></p><ul><li><img src=\"https://hsdes.intel.com/rest/binary/16026999858\"></li></ul><p><br></p><p><br></p>",
            "documentations": [
                {
                    "title": "Max® 10 FPGA - Helloworld Design and OCM test on Nios® V/c Processor",
                    "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/850281?explicitVersion=true&fileName=Max®_10_FPGA_Helloworld_and_OCM_test_design_on_Nios®V_c_Processor.pdf"
                }
            ],
            "ip_cores": [
                "Nios V/c soft processor core"
            ],
            "url": "https://www.intel.com/content/www/us/en/design-example/850281/a.html",
            "downloadUrl": "https://cdrdv2.intel.com/v1/dl/getContent/850281?explicitVersion=true&fileName=top.par",
            "first_file_in_uam": "top.par",
            "missing_par": "",
            "eula_id": 141,
            "device_part": "10M50DAF484C6GES",
            "os": "",
            "Q_DOWNLOAD_URL": "https://cdrdv2.intel.com/v1/dl/getContent/850281?explicitVersion=true&fileName=top.par",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Nios® V/g Processor Floating Point Unit (FPU) Design",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "25.1.0",
            "devkit": "Agilex® 7 FPGA F-Series Development Kit P-Tile and E-Tile DK-DEV-AGF014EA",
            "device_part": "AGFB014R24B2E2V",
            "description": "Nios V/g Processor-based design example with Floating Point Unit (FPU) on Agilex™ 7 FPGA F-Series Transceiver-SoC Development Kit (P-Tile and E-Tile)",
            "rich_description": "<p>This example design is about applying the floating point unit in Nios V/g processor. The example application evaluates the floating point rate of Nios V/g processor by using Linpack benchmark.\n More information on the Linpack Benchmark can be found here- https://top500.org/project/linpack/</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/25.1.0/agf014eb-si-devkit/niosv_g/fpu_test/img/block_diagram.png\"/></p>",
            "category": "FPU",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/releases/download/25.1.0-v1.0/agilex7_niosv_g_fpu_test.zip",
            "downloadUrl": "agilex7_niosv_g_fpu_test.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/247498881",
            "Q_GITHUB_RELEASE": "25.1.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 7 FPGA - TinyML LiteRT Example Design Example on Nios® V/g Processor",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "25.1.0",
            "devkit": "Agilex® 7 FPGA F-Series Development Kit P-Tile and E-Tile DK-DEV-AGF014EA",
            "device_part": "AGFB014R24B2E2V",
            "description": "Nios® V/g Processor-based TinyML LiteRT example design on the Agilex® 7 FPGA.",
            "rich_description": "<p>This design demonstrates the TinyML application using LiteRT for microcontrollers software with Nios® V/g processor in the Agilex® 7 FPGA F-Series Development Kit P-Tile and E-Tile DK-DEV-AGF014EA. </p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/25.1.0/agf014ea-dev-devkit/niosv_g/tinyml_liteRT/img/block_diagram.png\"/></p>",
            "category": "Machine Learning",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/releases/download/25.1.0-v1.0/agilex7_niosv_g_tinyml_liteRT.zip",
            "downloadUrl": "agilex7_niosv_g_tinyml_liteRT.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/247502695",
            "Q_GITHUB_RELEASE": "25.1.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 7 FPGA - Iperf Design Example on Nios® V/m Processor",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex 7 FPGA F-Series Transceiver-SoC Development Kit P-Tile and E-Tile DK-SI-AGF014EB",
            "device_part": "AGFB014R24B2E2V",
            "description": "Nios® V/m Processor-based Iperf example design on the Agilex® 7 FPGA.",
            "rich_description": "<p>Perf 2 is a benchmarking tool for measuring performance between two systems, and it can be used as a server or a client.</p><p>An iPerf server receives an iPerf request sent over a TCP/IP connection from any iPerf clients and runs the iPerf test according to the provided arguments. </p><p>Each test reports the bandwidth, loss, and other parameters.</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/24.3.1/agf014eb-si-devkit/niosv_m/agilex7_sisoc_iperf/img/agilex7_iperf.png\"/></p>",
            "category": "Web Server",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/blob/rel/24.3.1/agf014eb-si-devkit/niosv_m/agilex7_sisoc_iperf",
            "downloadUrl": "agilex7_sisoc_iperf.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/227789862",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 7 FPGA - Simple Socket Server (SSS) Design Example on Nios® V/m Processor",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex 7 FPGA F-Series Transceiver-SoC Development Kit P-Tile and E-Tile DK-SI-AGF014EB",
            "device_part": "AGFB014R24B2E2V",
            "description": "Nios® V/m Processor-based SSS example design on the Agilex® 7 FPGA.",
            "rich_description": "<p>This example design demonstrates communication with a telnet client on a development host PC.</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/24.3.1/agf014eb-si-devkit/niosv_m/agilex7_sisoc_sss/img/agilex7_sss.png\"/></p>",
            "category": "Web Server",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/blob/rel/24.3.1/agf014eb-si-devkit/niosv_m/agilex7_sisoc_sss/",
            "downloadUrl": "agilex7_sisoc_sss.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/227789872",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 7 FPGA - Transceiver loopback Design Example on Nios® V/m Processor",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex 7 FPGA F-Series Development Kit 2xF-Tile DK-DEV-AGF027F1ES",
            "device_part": "AGFB027R24C2E2VR2",
            "description": "",
            "rich_description": "<p>This design demonstrates the serial loopback via QSFPDD on Agilex 7 FPGA F-Series Development Kit 2xF-Tile DK-DEV-AGF027F1ES</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/24.3.1/agf027f1es-dev-devkit/niosv_m/xcver_ser_lp/img/niosv_xcver.png\"/></p>",
            "category": "Transceiver Loopback",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/blob/rel/24.3.1/agf027f1es-dev-devkit/niosv_m/xcver_ser_lp",
            "downloadUrl": "agilex7_xcver_loopback_design.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/227795504",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 7 FPGA - Custom Instruction Basic Operations Design Example on Nios® V/g Processor",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex® 7 FPGA F-Series Development Kit P-Tile and E-Tile DK-DEV-AGF014EA",
            "device_part": "AGFB014R24B2E2V",
            "description": "Nios® V/g Processor-based custom instruction example design on the Agilex® 7 FPGA.",
            "rich_description": "<p>A Processing Engine (PE) that performs basic arithmetic and logical computations is connected to the Nios® V/g processor using the custom instruction interface. </p><p>The current version of the Nios® V/g processor custom instruction interface supports operations up-to 32-Bit. </p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/24.3.1/agf014ea-dev-devkit/niosv_g/ci_basic_operations/img/niosv_ci_example.png\"/></p>",
            "category": "Custom Instruction",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/tree/rel/24.3.1/agf014ea-dev-devkit/niosv_g/ci_basic_operations",
            "downloadUrl": "agilex7_ci_basic_operations.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/230247565",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 7 FPGA - Custom Instruction CRC Design Example on Nios® V/g Processor",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex® 7 FPGA F-Series Development Kit P-Tile and E-Tile DK-DEV-AGF014EA",
            "device_part": "AGFB014R24B2E2V",
            "description": "Nios® V/g Processor-based custom instruction Cyclic Redundancy Check (CRC) example design on the Agilex® 7 FPGA.",
            "rich_description": "<p>A Processing Engine (PE) that performs the Cyclic Redundancy Check (CRC) algorithm is connected to the Nios® V/g processor using the custom instruction interface</p><p>The current version of the Nios® V/g processor custom instruction interface supports operations up-to 32-Bit. </p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/24.3.1/agf014ea-dev-devkit/niosv_g/ci_crc/img/niosv_ci_example.png\"/></p>",
            "category": "Custom Instruction",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/tree/rel/24.3.1/agf014ea-dev-devkit/niosv_g/ci_crc",
            "downloadUrl": "agilex7_ci_crc.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/230247575",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 7 FPGA - ECC Lite Design Example on Nios® V/g Processor",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex® 7 FPGA F-Series Development Kit P-Tile and E-Tile DK-DEV-AGF014EA",
            "device_part": "AGFB014R24B2E2V",
            "description": "Nios® V/g Processor-based ECC Lite example design on the Agilex® 7 FPGA.",
            "rich_description": "<p>This design demonstrates the ECC Lite feature of the Nios® V/g core by injecting an error on the General-Purpose Register (GPR) via simulation.</p><p>The ECC status and ECC source is observed for both correctable and uncorrectable errors on the General-Purpose Registers (GPR).</p><p>The Error is injected on the OCM (M20k) GPR through the ECC parity flip feature. The parity value in the GPR is flipped using the force command in the test bench file (sys_tb.v). </p><p>The ECC Status and ECC Source signals are probed and observed using Questa Simulation</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/24.3.1/agf014ea-dev-devkit/niosv_g/ecc_lite/img/ecc_lite.png\"/></p>",
            "category": "ECC",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/tree/rel/24.3.1/agf014ea-dev-devkit/niosv_g/ecc_lite",
            "downloadUrl": "agilex7_ecc_lite.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/230251292",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 7 FPGA - PIO and OCM test Design Example on Nios® V/c Processor",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex® 7 FPGA F-Series Development Kit P-Tile and E-Tile DK-DEV-AGF014EA",
            "device_part": "AGFB014R24B2E2V",
            "description": "Nios® V/c Processor-based PIO and OCM test example design on the Agilex® 7 FPGA.",
            "rich_description": "<p>Nios® V/c processor-based PIO and OCM memory test example design on the Agilex® 7 FPGA</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/24.3.1/agf014ea-dev-devkit/niosv_c/pio_ocm/img/niosv_compact_core_pio.png\"/></p>",
            "category": "Memory",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/tree/rel/24.3.1/agf014ea-dev-devkit/niosv_c/pio_ocm",
            "downloadUrl": "agilex7_niosv_c_pio_ocm.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/230251382",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 7 FPGA - Tightly Coupled Memory (TCM) Design Example on Nios® V/g Processor",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex® 7 FPGA F-Series Development Kit P-Tile and E-Tile DK-DEV-AGF014EA",
            "device_part": "AGFB014R24B2E2V",
            "description": "Nios® V/g Processor-based TCM example design on the Agilex® 7 FPGA.",
            "rich_description": "<p>This example design is about how to use tightly coupled memory in Nios® V/g processor. The example application measures the memory access speed of different memories connected to the processor, such as TCM, on-chip memory and external memory interface (EMIF). In addition to that, the application showcases the speedup between cached and un-cached memories.</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/24.3.1/agf014eb-si-devkit/niosv_g/tcm_mem_test/img/niosv_tcm.png\"/></p>",
            "category": "Memory",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/tree/rel/24.3.1/agf014eb-si-devkit/niosv_g/tcm_mem_test",
            "downloadUrl": "agilex7_tcm_design.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/230255618",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 7 FPGA - Iperf Design Example on Nios® V/m Processor",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "24.3.0 Pro",
            "devkit": "Agilex 7 FPGA F-Series Transceiver-SoC Development Kit P-Tile and E-Tile DK-SI-AGF014EB",
            "device_part": "AGFB014R24B2E2V",
            "description": "Nios® V/m Processor-based Iperf example design on the Agilex® 7 FPGA.",
            "rich_description": "<p>Perf 2 is a benchmarking tool for measuring performance between two systems, and it can be used as a server or a client.</p><p>An iPerf server receives an iPerf request sent over a TCP/IP connection from any iPerf clients and runs the iPerf test according to the provided arguments. </p><p>Each test reports the bandwidth, loss, and other parameters.</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/24.3/niosv_m/agilex7_sisoc_iperf/img/agilex7_iperf.png\"/></p>",
            "category": "Web Server",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/blob/rel/24.3/niosv_m/agilex7_sisoc_iperf",
            "downloadUrl": "agilex7_sisoc_iperf.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/220575358",
            "Q_GITHUB_RELEASE": "24.3.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 7 FPGA - Simple Socket Server (SSS) Design Example on Nios® V/m Processor",
            "source": "GitHub",
            "family": "Agilex 7",
            "quartus_version": "24.3.0 Pro",
            "devkit": "Agilex 7 FPGA F-Series Transceiver-SoC Development Kit P-Tile and E-Tile DK-SI-AGF014EB",
            "device_part": "AGFB014R24B2E2V",
            "description": "Nios® V/m Processor-based SSS example design on the Agilex® 7 FPGA.",
            "rich_description": "<p>This example design demonstrates communication with a telnet client on a development host PC.</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex7f-nios-ed/rel/24.3/niosv_m/agilex7_sisoc_sss/img/agilex7_sss.png\"/></p>",
            "category": "Web Server",
            "url": "https://github.com/altera-fpga/agilex7f-nios-ed/blob/rel/24.3/niosv_m/agilex7_sisoc_sss/",
            "downloadUrl": "agilex7_sisoc_sss.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex7f-nios-ed/releases/assets/220575932",
            "Q_GITHUB_RELEASE": "24.3.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA- Nios V/c Helloworld OCM Memory test Design",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "25.1.0",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Nios® V/c Processor-based Helloworld and OCM memory test example design",
            "rich_description": "<p>This design prints a simple Hello World message and performs a simple OCM memory test for the Agilex™ 5 FPGA E-Series 065B Premium Development Kit.</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/25.1.0/niosv_c/niosv_c_helloworld_ocm_mem_test/img/hello_world_ocm.png\"/></p>",
            "category": "Helloworld",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/releases/download/25.1.0-v1.0/agilex5_niosv_c_helloworld_ocm_mem_test.zip",
            "downloadUrl": "agilex5_niosv_c_helloworld_ocm_mem_test.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/247496342",
            "Q_GITHUB_RELEASE": "25.1.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Nios® V/m Baseline Golden Hardware Reference Design (GHRD)",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "25.1.0",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "This design demonstrates the baseline Golden Hardware Reference Design (GHRD) for a Nios® V/m processor with basic bare minimum peripherals required for any application execution for the Agilex™ 5 FPGA E-Series 065B Premium Development Kit.",
            "rich_description": "<p>This example design includes a Nios® V/m processor connected to the On Chip RAM-II, JTAG UART IP, Parallel-IO and System ID peripheral core. The objective of the design is to accomplish data transfer between the processor and soft IP peripherals.</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/25.1.0/niosv_m/niosv_m_baseline_ghrd/img/baseling_ghrd_block_design.png\"/></p>",
            "category": "GHRD",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/releases/download/25.1.0-v1.0/agilex5_niosv_m_baseline_ghrd.zip",
            "downloadUrl": "agilex5_niosv_m_baseline_ghrd.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/247187115",
            "Q_GITHUB_RELEASE": "25.1.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - TinyML LiteRT Example Design Example on Nios® V/g Processor",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "25.1.0",
            "devkit": "Agilex 5 FPGA ESeries 065B Premium Development Kit DKA5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Nios® V/g Processor-based TinyML LiteRT example design on the Agilex® 5 FPGA.",
            "rich_description": "<p>This design demonstrates the TinyML application using LiteRT for microcontrollers software with Nios® V/g processor in the Agilex™ 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1. </p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/25.1.0/niosv_g/tinyml_liteRT/img/block_diagram.png\"/></p>",
            "category": "Machine Learning",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/releases/download/25.1.0-v1.0/agilex5_niosv_g_tinyml_liteRT.zip",
            "downloadUrl": "agilex5_niosv_g_tinyml_liteRT.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/247504926",
            "Q_GITHUB_RELEASE": "25.1.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - Hello World and OCM test Design Example on Nios® V/c Processor",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Nios® V/c Processor-based Helloworld example design on the Agilex® 5 FPGA.",
            "rich_description": "<p>Nios® V/c processor-based Helloworld and OCM memory test example design on the Agilex® 5 FPGA</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3.1/niosv_c/niosv_c_helloworld_ocm_mem_test/img/hello_world_ocm.png\"/></p>",
            "category": "Helloworld",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/tree/rel/24.3.1/niosv_c/niosv_c_helloworld_ocm_mem_test",
            "downloadUrl": "agilex5_niosv_c_helloworld_ocm_mem_test.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/230235880",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - Hello World on Nios® V/g Processor Design Example",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Nios® V/g Processor-based Helloworld example design on the Agilex® 5 FPGA.",
            "rich_description": "<p>Nios® V/g Processor-based Helloworld example design on the Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DKA5E065BB32AES1</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3.1/niosv_g/niosv_g_helloworld/img/hello_world.png\"/></p>",
            "category": "Helloworld",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/tree/rel/24.3.1/niosv_g/niosv_g_helloworld",
            "downloadUrl": "agilex5_niosv_g_helloworld.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/230236106",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - OCM Memory test on Nios® V/g Processor Design Example",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Nios® V/g Processor-based OCM test example design on the Agilex® 5 FPGA.",
            "rich_description": "<p>Nios® V/g Processor-based OCM test example design on the Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DKA5E065BB32AES1</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3.1/niosv_g/niosv_g_ocm_mem_test/img/hello_world_ocm.png\"/></p>",
            "category": "Memory",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/blob/rel/24.3.1/niosv_g/niosv_g_ocm_mem_test/",
            "downloadUrl": "agilex5_niosv_g_ocm_mem_test.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/230236330",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - Nios V/m Baseline Golden Hardware Reference Design (GHRD)",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "This design demonstrates the Baseline Golden Hardware Reference Design (GHRD) for a Nios V/m processor with basic bare minimum peripherals required for any application execution",
            "rich_description": "<p>This example design includes a Nios® V processor connected to the On Chip RAM-II, JTAG UART IP, Parallel- IO and System ID peripheral core. \nThe objective of the design is to accomplish data transfer between the processor and on chip memory. </p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3.1/niosv_m/niosv_m_baseline_ghrd/img/baseling_ghrd_block_design.png\"/></p>",
            "category": "GHRD",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/blob/rel/24.3.1/niosv_m/niosv_m_baseline_ghrd",
            "downloadUrl": "agilex5_niosv_m_baseline_ghrd.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/227780041",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - Nios® V/m Processor with DMA and OCM Design Example",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "This design demonstrates the transaction between the Nios® V/m processor with DMA and OCM core for the Agilex 5 FPGA E-Series 065B Premium Development Kit (ES1)DK-A5E065BB32AES1.",
            "rich_description": "<p>This example design includes a Nios® V processor connected to the DMA, On Chip RAM-II and JTAG UART IP. \nThe objective of the design is to accomplish a data transfer between the 2 On Chip RAM-II using a DMA (MSGDMA) IP. \nDMA facilitates the data transfer which is then read back by the processor.</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3.1/niosv_m/niosv_m_dma_ocm/img/dma_ocm.png\"/></p>",
            "category": "Memory",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/blob/rel/24.3.1/niosv_m/niosv_m_dma_ocm",
            "downloadUrl": "agilex5_niosv_m_dma_ocm.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/227780076",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - Nios® V/m Processor Helloworld and OCM test design",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Nios® V/m Processor-based Helloworld and OCM memory test example design on the Agilex 5 FPGA.",
            "rich_description": "<p>Nios® V/m Processor-based Helloworld example design on the Agilex 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1. </p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3.1/niosv_m/niosv_m_helloworld_ocm_mem_test/img/hello_world_ocm.png\"/></p>",
            "category": "Helloworld",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/blob/rel/24.3.1/niosv_m/niosv_m_helloworld_ocm_mem_test",
            "downloadUrl": "agilex5_niosv_m_helloworld_ocm.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/227780100",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA- Nios® V/m Processor PIO LED Toggle Design",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.1 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "This design demonstrates the transaction between the Nios® V processor and the PIO core.",
            "rich_description": "<p>The PIO core is configured for output ports only and the outputs are connected to the LED on the development kit. The application, which runs atop this design, toggles these output registers of the PIO core. The application writes and reads back the content from the IP location. </p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3.1/niosv_m/niosv_m_pio/img/pio.png\"/></p>",
            "category": "PIO LED Toggle",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/blob/rel/24.3.1/niosv_m/niosv_m_pio/",
            "downloadUrl": "agilex5_niosv_m_pio.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/227780104",
            "Q_GITHUB_RELEASE": "24.3.1-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - Hello World on Nios® V/g Processor Design Example",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.0 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Nios® V/g Processor-based Helloworld example design on the Agilex® 5 FPGA.",
            "rich_description": "<p>Nios® V/g Processor-based Helloworld example design on the Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DKA5E065BB32AES1</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3/niosv_g/niosv_g_helloworld/img/hello_world.png\"/></p>",
            "category": "Helloworld",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/tree/rel/24.3/niosv_g/niosv_g_helloworld",
            "downloadUrl": "agilex5_niosv_g_helloworld.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/220628301",
            "Q_GITHUB_RELEASE": "24.3.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - Hello World and OCM test Design Example on Nios® V/c Processor",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.0 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Nios® V/c Processor-based Helloworld example design on the Agilex® 5 FPGA.",
            "rich_description": "<p>Nios® V/c processor-based Helloworld and OCM memory test example design on the Agilex® 5 FPGA</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3/niosv_c/niosv_c_helloworld_ocm_mem_test/img/hello_world_ocm.png\"/></p>",
            "category": "Helloworld",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/blob/rel/24.3/niosv_c/niosv_c_helloworld_ocm_mem_test",
            "downloadUrl": "agilex5_niosv_c_helloworld_ocm_mem_test.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/220623935",
            "Q_GITHUB_RELEASE": "24.3.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - Hello World on Nios® V/g Processor Design Example",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.0 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Nios® V/g Processor-based OCM test example design on the Agilex® 5 FPGA.",
            "rich_description": "<p>Nios® V/g Processor-based OCM test example design on the Agilex® 5 FPGA E-Series 065B Premium Development Kit (ES1) DKA5E065BB32AES1</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3/niosv_g/niosv_g_ocm_mem_test/img/hello_world_ocm.png\"/></p>",
            "category": "Memory",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/blob/rel/24.3/niosv_g/niosv_g_ocm_mem_test/",
            "downloadUrl": "agilex5_niosv_g_ocm_mem_test.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/220622642",
            "Q_GITHUB_RELEASE": "24.3.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - Nios® V/m Processor with DMA and OCM Design Example",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.0 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "This design demonstrates the transaction between the Nios® V/m processor with DMA and OCM core for the Agilex 5 FPGA E-Series 065B Premium Development Kit (ES1)DK-A5E065BB32AES1.",
            "rich_description": "<p>This example design includes a Nios® V processor connected to the DMA, On Chip RAM-II and JTAG UART IP. \nThe objective of the design is to accomplish a data transfer between the 2 On Chip RAM-II using a DMA (MSGDMA) IP. \nDMA facilitates the data transfer which is then read back by the processor.</p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3/niosv_m/niosv_m_dma_ocm/img/dma_ocm.png\"/></p>",
            "category": "Memory",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/blob/rel/24.3/niosv_m/niosv_m_dma_ocm",
            "downloadUrl": "agilex5_niosv_m_dma_ocm.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/220622773",
            "Q_GITHUB_RELEASE": "24.3.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA - Nios® V/m Processor Helloworld and OCM test design",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.0 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Nios® V/m Processor-based Helloworld and OCM memory test example design on the Agilex 5 FPGA.",
            "rich_description": "<p>Nios® V/m Processor-based Helloworld example design on the Agilex 5 FPGA E-Series 065B Premium Development Kit (ES1) DK-A5E065BB32AES1. </p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3/niosv_m/niosv_m_helloworld_ocm_mem_test/img/hello_world_ocm.png\"/></p>",
            "category": "Helloworld",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/blob/rel/24.3/niosv_m/niosv_m_helloworld_ocm_mem_test",
            "downloadUrl": "agilex5_niosv_m_helloworld_ocm.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/220622815",
            "Q_GITHUB_RELEASE": "24.3.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 FPGA- Nios® V/m Processor PIO LED Toggle Design",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.0 Pro",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "This design demonstrates the transaction between the Nios® V processor and the PIO core.",
            "rich_description": "<p>The PIO core is configured for output ports only and the outputs are connected to the LED on the development kit. The application, which runs atop this design, toggles these output registers of the PIO core. The application writes and reads back the content from the IP location. </p><p><img alt=\"image\" src=\"https://raw.githubusercontent.com/altera-fpga/agilex5e-nios-ed/rel/24.3/niosv_m/niosv_m_pio/img/pio.png\"/></p>",
            "category": "PIO LED Toggle",
            "url": "https://github.com/altera-fpga/agilex5e-nios-ed/blob/rel/24.3/niosv_m/niosv_m_pio/",
            "downloadUrl": "agilex5_niosv_m_pio.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-nios-ed/releases/assets/220617185",
            "Q_GITHUB_RELEASE": "24.3.0-v1.0",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "Agilex 5 System On Chip (SoC) FPGA Example Design with Multi-rate Ethernet PHY Intel® FPGA IP Core",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "24.3.0 Pro Edition",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "This design is based on the Agilex 5 SoC Golden Hardware Reference Design (GHRD) which is part of the Golden System Reference Design (GSRD), adds a new subsystem with Multi-rate Ethernet Phy which covers all Hardware features specific to Config-3 TSN.",
            "rich_description": "<p>This design is based on base GHRD with the following feature additions: \n- Enable the Data path between HPS &lt;-&gt; XGMAC &lt;-&gt;MR PHY (Direct mode) &lt;-&gt; Marvell PHY running at 2.5G rate.\n- This ED showcases 2.5G data rate.\n- Enable the Deterministic Latency (DL) feature of MR PHY IP which precisely determines the delay between the PCS elastic FIFO (EFIFO) and the PMA pins for TSN usecases. Also enable the CSR interface with HPS Light weight bridge to convey these delays (Soft PCS, Hard PCS   and PMA delays) for both RX and TX directions.\n- GMII (8-bit) interface for TSN enabled ethernet data transfers to and from XGMAC to external PHY. Tranceiever’s reference clocks are used to derive the required frequency for running this parallel interface as the expectation is to have zero ppm difference between these clocks.  </p><h2>Repository Structure</h2><ul>\n<li>Directory Structure used in this example design\n <code>bash\n    |--- doc  \n    |--- src\n    |   |--- hw \n    |   |--- sw</code></li>\n</ul>",
            "category": "Unknown",
            "url": "https://github.com/altera-fpga/agilex5-ed-tsn-sgmii",
            "downloadUrl": "source_code.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5-ed-tsn-sgmii/releases/assets/209677369",
            "Q_GITHUB_RELEASE": "24.3-1",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "a5ed065es-premium-devkit-oobe-legacy-baseline",
            "source": "GitHub",
            "family": "Agilex 5 E-Series",
            "quartus_version": "25.1.1",
            "patch_number": "Unknown",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED013BB32AE5S",
            "description": "This is the baseline Golden Hardware Reference Design (GHRD) for Agilex 5 FPGA E-Series 065B Premium Development Kit with Out of Box Experience (OOBE) daughter card, which is also known as HPS Enablement Expansion Board.",
            "rich_description": "<p>Agilex 5 GHRD is a reference design for Intel Agilex 5 System On Chip (SoC) FPGA.</p><p>The GHRD is part of the Golden System Reference Design (GSRD), which provides a complete solution, including exercising soft IP in the fabric, booting to U-Boot, then Linux, and running sample Linux applications.\nRefer to the <a href=\"https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/\">Agilex 5 E-Series Premium Development Kit GSRD</a> for information about GSRD.</p><p>The design uses HPS First configuration mode.</p><h2>Baseline feature</h2><p>This reference design demonstrates the following system integration between Hard Processor System (HPS) and FPGA IPs:\n- Hard Processor System (HPS) enablement and configuration\n  - Enable dual core Arm Cortex-A76 processor\n  - Enable dual core Arm Cortex-A55 processor\n  - HPS Peripheral and I/O (SD/MMC, EMAC, MDIO, USB, I3C, JTAG, UART, and GPIO)\n  - HPS Clock and Reset\n  - HPS FPGA Bridge and Interrupt\n- HPS EMIF configuration (starting 25.1.1 ECC is enabled by default)\n- System integration with FPGA IPs\n  - Peripheral subsystem that consists of System ID, Programmable I/O (PIO) IP for controlling DIPSW, PushButton, and LEDs\n  - Debug subsystem that consists of JTAG-to-Avalon Master IP to allow System-Console debug activity and FPGA content access through JTAG\n  - 256KB of FPGA On-Chip Memory</p><h3>USB modes</h3><p>This design supports USB 3.1 in both host and device mode.\nOnce power up, the USB mode will remain and cannot be changed during runtime.</p><p>The linux device tree (dts) needs to be configured.\nThe dts can be set with \"dr_mode\".</p><p>| dr_mode value | Equivalent USB mode |\n| :-- | :-- |\n| host | Host |\n| peripheral | Device |</p>",
            "category": "Golden Hardware Reference Design (GHRD)",
            "url": "https://www.github.com/altera-fpga/agilex5e-ed-gsrd",
            "downloadUrl": "a5ed065es-premium-devkit-oobe-legacy-baseline.zip",
            "documentations": "https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-ed-gsrd/releases/assets/281369322",
            "Q_GITHUB_RELEASE": "QPDS25.1.1_REL_GSRD_PR",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "a5ed065es-premium-devkit-oobe-legacy-tsn-cfg2",
            "source": "GitHub",
            "family": "Agilex 5 E-Series",
            "quartus_version": "25.1.1",
            "patch_number": "Unknown",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Time-Sensitive Networking (TSN): PHY configuration 2 (RGMII from FPGA HVIO) Golden Hardware Reference Design (GHRD) for Agilex 5 FPGA E-Series 065B Premium Development Kit with Out of Box Experience (OOBE) daughter card, which is also known as HPS Enablement Expansion Board.",
            "rich_description": "<p>Agilex 5 GHRD is a reference design for Intel Agilex 5 System On Chip (SoC) FPGA.</p><p>The GHRD is part of the Golden System Reference Design (GSRD), which provides a complete solution, including exercising soft IP in the fabric, booting to U-Boot, then Linux, and running sample Linux applications.\nRefer to the <a href=\"https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/\">Agilex 5 E-Series Premium Development Kit GSRD</a> for information about GSRD.</p><p>The design uses HPS First configuration mode.</p><h2>Baseline feature</h2><p>This reference design demonstrates the following system integration between Hard Processor System (HPS) and FPGA IPs:\n- Hard Processor System (HPS) enablement and configuration\n  - Enable dual core Arm Cortex-A76 processor\n  - Enable dual core Arm Cortex-A55 processor\n  - HPS Peripheral and I/O (SD/MMC, EMAC, MDIO, USB, I3C, JTAG, UART, and GPIO)\n  - HPS Clock and Reset\n  - HPS FPGA Bridge and Interrupt\n- HPS EMIF configuration (starting 25.1.1 ECC is enabled by default)\n- System integration with FPGA IPs\n  - Peripheral subsystem that consists of System ID, Programmable I/O (PIO) IP for controlling DIPSW, PushButton, and LEDs\n  - Debug subsystem that consists of JTAG-to-Avalon Master IP to allow System-Console debug activity and FPGA content access through JTAG\n  - 256KB of FPGA On-Chip Memory</p><h3>USB modes</h3><p>This design supports USB 3.1 in both host and device mode.\nOnce power up, the USB mode will remain and cannot be changed during runtime.</p><p>The linux device tree (dts) needs to be configured.\nThe dts can be set with \"dr_mode\".</p><p>| dr_mode value | Equivalent USB mode |\n| :-- | :-- |\n| host | Host |\n| peripheral | Device |</p><h2>Advanced feature</h2><ul>\n<li>FPGA RGMII subsystem that consists of GMII-to-RGMII conversion for HPS XGMAC into FPGA IO connection</li>\n</ul>",
            "category": "Golden Hardware Reference Design (GHRD)",
            "url": "https://www.github.com/altera-fpga/agilex5e-ed-gsrd",
            "downloadUrl": "a5ed065es-premium-devkit-oobe-legacy-tsn-cfg2.zip",
            "documentations": "https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-ed-gsrd/releases/assets/281369330",
            "Q_GITHUB_RELEASE": "QPDS25.1.1_REL_GSRD_PR",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "a5ed065es-modular-devkit-som-legacy-baseline",
            "source": "GitHub",
            "family": "Agilex 5 E-Series",
            "quartus_version": "25.1.1",
            "patch_number": "Unknown",
            "devkit": "Agilex 5 FPGA E-Series 065B Modular Development Kit MK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Baseline Golden Hardware Reference Design (GHRD) for Agilex 5 FPGA E-Series 065B Modular Development Kit.",
            "rich_description": "<p>Agilex 5 GHRD is a reference design for Intel Agilex 5 System On Chip (SoC) FPGA.</p><p>The GHRD is part of the Golden System Reference Design (GSRD), which provides a complete solution, including exercising soft IP in the fabric, booting to U-Boot, then Linux, and running sample Linux applications.\nRefer to the <a href=\"https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/modular/gsrd/ug-gsrd-agx5e-modular/\">Agilex 5 E-Series Modular Development Kit GSRD</a> for information about GSRD.</p><p>The design uses HPS First configuration mode.</p><h2>Baseline feature</h2><p>This reference design demonstrates the following system integration between Hard Processor System (HPS) and FPGA IPs:\n- Hard Processor System (HPS) enablement and configuration\n  - Enable dual core Arm Cortex-A76 processor\n  - Enable dual core Arm Cortex-A55 processor\n  - HPS Peripheral and I/O (SD/MMC, EMAC, MDIO, USB, I2C, JTAG, UART, and GPIO)  - HPS Clock and Reset\n  - HPS FPGA Bridge and Interrupt\n- HPS EMIF configuration (starting 25.1.1 ECC is enabled by default)\n- System integration with FPGA IPs\n  - Peripheral subsystem that consists of System ID, Programmable I/O (PIO) IP for controlling DIPSW, PushButton, and LEDs\n  - Debug subsystem that consists of JTAG-to-Avalon Master IP to allow System-Console debug activity and FPGA content access through JTAG\n  - 256KB of FPGA On-Chip Memory</p>",
            "category": "Golden Hardware Reference Design (GHRD)",
            "url": "https://www.github.com/altera-fpga/agilex5e-ed-gsrd",
            "downloadUrl": "a5ed065es-modular-devkit-som-legacy-baseline.zip",
            "documentations": "https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/modular/gsrd/ug-gsrd-agx5e-modular/",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-ed-gsrd/releases/assets/281369271",
            "Q_GITHUB_RELEASE": "QPDS25.1.1_REL_GSRD_PR",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "a5ed065es-premium-devkit-debug2-legacy-baseline",
            "source": "GitHub",
            "family": "Agilex 5 E-Series",
            "quartus_version": "25.1.1",
            "patch_number": "Unknown",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Baseline Golden Hardware Reference Design (GHRD) for Agilex 5 FPGA E-Series 065B Premium Development Kit with HPS Test Board.",
            "rich_description": "<p>Agilex 5 GHRD is a reference design for Intel Agilex 5 System On Chip (SoC) FPGA.</p><p>The GHRD is part of the Golden System Reference Design (GSRD), which provides a complete solution, including exercising soft IP in the fabric, booting to U-Boot, then Linux, and running sample Linux applications.\nRefer to the <a href=\"https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/\">Agilex 5 E-Series Premium Development Kit GSRD</a> for information about GSRD.</p><p>The design uses HPS First configuration mode.</p><h2>Baseline feature</h2><p>This reference design demonstrates the following system integration between Hard Processor System (HPS) and FPGA IPs:\n- Hard Processor System (HPS) enablement and configuration\n  - Enable dual core Arm Cortex-A76 processor\n  - Enable dual core Arm Cortex-A55 processor\n  - HPS Peripheral and I/O (SD/MMC, EMAC, SPI, MDIO, I3C, JTAG, UART, TRACE, and GPIO)\n  - HPS Clock and Reset\n  - HPS FPGA Bridge and Interrupt\n- HPS EMIF configuration (starting 25.1.1 ECC is enabled by default)\n- System integration with FPGA IPs\n  - Peripheral subsystem that consists of System ID, Programmable I/O (PIO) IP for controlling DIPSW, PushButton, and LEDs\n  - Debug subsystem that consists of JTAG-to-Avalon Master IP to allow System-Console debug activity and FPGA content access through JTAG\n  - 256KB of FPGA On-Chip Memory</p>",
            "category": "Golden Hardware Reference Design (GHRD)",
            "url": "https://www.github.com/altera-fpga/agilex5e-ed-gsrd",
            "downloadUrl": "a5ed065es-premium-devkit-debug2-legacy-baseline.zip",
            "documentations": "https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-ed-gsrd/releases/assets/281369312",
            "Q_GITHUB_RELEASE": "QPDS25.1.1_REL_GSRD_PR",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "a5ed065es-premium-devkit-emmc-legacy-baseline",
            "source": "GitHub",
            "family": "Agilex 5 E-Series",
            "quartus_version": "25.1.1",
            "patch_number": "Unknown",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Baseline Golden Hardware Reference Design (GHRD) for Agilex 5 FPGA E-Series 065B Premium Development Kit with HPS NAND Board. This board also offers eMMC.",
            "rich_description": "<p>Agilex 5 GHRD is a reference design for Intel Agilex 5 System On Chip (SoC) FPGA.</p><p>The GHRD is part of the Golden System Reference Design (GSRD), which provides a complete solution, including exercising soft IP in the fabric, booting to U-Boot, then Linux, and running sample Linux applications.\nRefer to the <a href=\"https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/\">Agilex 5 E-Series Premium Development Kit GSRD</a> for information about GSRD.</p><p>The design uses HPS First configuration mode.</p><h2>Baseline feature</h2><p>This reference design demonstrates the following system integration between Hard Processor System (HPS) and FPGA IPs:\n- Hard Processor System (HPS) enablement and configuration\n  - Enable dual core Arm Cortex-A76 processor\n  - Enable dual core Arm Cortex-A55 processor\n  - Hard Processor System enablement and configuration\n  - HPS Peripheral and I/O (SD/MMC, EMAC, SPI, MDIO, I2C, I3C, UART, TRACE, and GPIO)\n  - HPS Clock and Reset\n  - HPS FPGA Bridge and Interrupt\n- HPS EMIF configuration (starting 25.1.1 ECC is enabled by default)\n- System integration with FPGA IPs\n  - Peripheral subsystem that consists of System ID, Programmable I/O (PIO) IP for controlling DIPSW, PushButton, and LEDs\n  - Debug subsystem that consists of JTAG-to-Avalon Master IP to allow System-Console debug activity and FPGA content access through JTAG\n  - 256KB of FPGA On-Chip Memory</p>",
            "category": "Golden Hardware Reference Design (GHRD)",
            "url": "https://www.github.com/altera-fpga/agilex5e-ed-gsrd",
            "downloadUrl": "a5ed065es-premium-devkit-emmc-legacy-baseline.zip",
            "documentations": "https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-ed-gsrd/releases/assets/281369316",
            "Q_GITHUB_RELEASE": "QPDS25.1.1_REL_GSRD_PR",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "HPS Time-Sensitive Network (RGMII from HVIO) System Example Design with HPS Expansion Board for Agilex 5 FPGA E-Series 065B Premium Development Kit",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "25.1",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Time-Sensitive Networking (TSN): PHY configuration 2 (RGMII from FPGA HVIO) System Example Design for Agilex 5 FPGA E-Series 065B Premium Development Kit with Out-of-Box Experience (OOBE) daughter card, which is also known as HPS Enablement Expansion Board.",
            "rich_description": "<p>Agilex 5 GHRD is a reference design for Intel Agilex 5 System On Chip (SoC) FPGA.</p><p>The GHRD is part of the Golden System Reference Design (GSRD), which provides a complete solution, including exercising soft IP in the fabric, booting to U-Boot, then Linux, and running sample Linux applications.\nRefer to the <a href=\"https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/\">Agilex 5 E-Series Premium Development Kit GSRD</a> for information about GSRD.</p><p>The design uses HPS First configuration mode.</p><h2>Baseline feature</h2><p>This reference design demonstrates the following system integration between Hard Processor System (HPS) and FPGA IPs:<ul><li> Hard Processor System (HPS) enablement and configuration</li><li>Enable dual core Arm Cortex-A76 processor</li><li> Enable dual core Arm Cortex-A55 processor</li><li>HPS Peripheral and I/O (SD/MMC, EMAC, MDIO, USB, I3C, JTAG, UART, and GPIO)</li><li>HPS Clock and Reset</li><li>HPS FPGA Bridge and Interrupt</li><li>HPS EMIF configuration</li><li>System integration with FPGA IPs</li><li>Peripheral subsystem that consists of System ID, Programmable I/O (PIO) IP for controlling DIPSW, PushButton, and LEDs</li><li>Debug subsystem that consists of JTAG-to-Avalon Master IP to allow System-Console debug activity and FPGA content access through JTAG</li><li>256KB of FPGA On-Chip Memory</li></ul><h2>Advanced feature</h2><ul><li>FPGA RGMII subsystem that consists of GMII-to-RGMII conversion for HPS XGMAC into FPGA IO connection</li></ul></p>",
            "category": "HPS",
            "url": "https://www.github.com/altera-fpga/agilex5e-ed-gsrd",
            "downloadUrl": "a5ed065es-premium-devkit-oobe-legacy-tsn-cfg2.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-ed-gsrd/releases/assets/245602332",
            "Q_GITHUB_RELEASE": "QPDS25.1_REL_GSRD_PR",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "HPS Baseline System Example Design for Modular Development Kit for Agilex 5 FPGA E-Series 065B Modular Development Kit",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "25.1",
            "devkit": "Agilex 5 FPGA E-Series 065B Modular Development Kit MK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "HPS Baseline System Example Design for Agilex 5 FPGA E-Series 065B Modular Development Kit",
            "rich_description": "<p>Agilex 5 GHRD is a reference design for Intel Agilex 5 System On Chip (SoC) FPGA.</p><p>The GHRD is part of the Golden System Reference Design (GSRD), which provides a complete solution, including exercising soft IP in the fabric, booting to U-Boot, then Linux, and running sample Linux applications.\nRefer to the <a href=\"https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/modular/gsrd/ug-gsrd-agx5e-modular/\">Agilex 5 E-Series Modular Development Kit GSRD</a> for information about GSRD.</p><p>The design uses HPS First configuration mode.</p><h2>Baseline feature</h2><p>This reference design demonstrates the following system integration between Hard Processor System (HPS) and FPGA IPs:<ul><li> Hard Processor System (HPS) enablement and configuration</li><li>Enable dual core Arm Cortex-A76 processor</li><li>Enable dual core Arm Cortex-A55 processor</li><li>HPS Peripheral and I/O (SD/MMC, EMAC, MDIO, USB, I2C, JTAG, UART, and GPIO)</li><li>HPS Clock and Reset<li></li>HPS FPGA Bridge and Interrupt</li><li>HPS EMIF configuration<li></li>System integration with FPGA IPs</li><li>Peripheral subsystem that consists of System ID, Programmable I/O (PIO) IP for controlling DIPSW, PushButton, and LEDs</li><li>Debug subsystem that consists of JTAG-to-Avalon Master IP to allow System-Console debug activity and FPGA content access through JTAG</li><li>256KB of FPGA On-Chip Memory</li></ul></p>",
            "category": "HPS",
            "url": "https://www.github.com/altera-fpga/agilex5e-ed-gsrd",
            "downloadUrl": "a5ed065es-modular-devkit-som-legacy-baseline.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-ed-gsrd/releases/assets/245602268",
            "Q_GITHUB_RELEASE": "QPDS25.1_REL_GSRD_PR",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "HPS Baseline System Example Design with NAND Boot for Agilex 5 FPGA E-Series 065B Premium Development Kit",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "25.1",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "HPS Baseline System Example Design for Agilex 5 FPGA E-Series 065B Premium Development Kit with HPS NAND Board.",
            "rich_description": "<p>Agilex 5 GHRD is a reference design for Intel Agilex 5 System On Chip (SoC) FPGA.</p><p>The GHRD is part of the Golden System Reference Design (GSRD), which provides a complete solution, including exercising soft IP in the fabric, booting to U-Boot, then Linux, and running sample Linux applications.</li><li>Refer to the <a href=\"https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/\">Agilex 5 E-Series Premium Development Kit GSRD</a> for information about GSRD.</p><p>The design uses HPS First configuration mode.</p><h2>Baseline feature</h2><p>This reference design demonstrates the following system integration between Hard Processor System (HPS) and FPGA IPs:<ul><li>Hard Processor System (HPS) enablement and configuration</li><li>Enable dual core Arm Cortex-A76 processor</li><li>Enable dual core Arm Cortex-A55 processor</li><li>HPS Peripheral and I/O (NAND, EMAC, SPI, MDIO, I2C, I3C, UART, and GPIO)</li><li>HPS Clock and Reset</li><li>HPS FPGA Bridge and Interrupt</li><li>HPS EMIF configuration</li><li>System integration with FPGA IPs</li><li>Peripheral subsystem that consists of System ID, Programmable I/O (PIO) IP for controlling DIPSW, PushButton, and LEDs</li><li>Debug subsystem that consists of JTAG-to-Avalon Master IP to allow System-Console debug activity and FPGA content access through JTAG</li><li>256KB of FPGA On-Chip Memory</li></ul></p>",
            "category": "HPS",
            "url": "https://www.github.com/altera-fpga/agilex5e-ed-gsrd",
            "downloadUrl": "a5ed065es-premium-devkit-nand-legacy-baseline.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-ed-gsrd/releases/assets/245602305",
            "Q_GITHUB_RELEASE": "QPDS25.1_REL_GSRD_PR",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "HPS Baseline System Example Design with eMMC Boot for Agilex 5 FPGA E-Series 065B Premium Development Kit",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "25.1",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Baseline Golden Hardware Reference Design (GHRD) for Agilex 5 FPGA E-Series 065B Premium Development Kit with HPS NAND Board. This board also offers eMMC.",
            "rich_description": "<p>Agilex 5 GHRD is a reference design for Intel Agilex 5 System On Chip (SoC) FPGA.</p><p>The GHRD is part of the Golden System Reference Design (GSRD), which provides a complete solution, including exercising soft IP in the fabric, booting to U-Boot, then Linux, and running sample Linux applications.\nRefer to the <a href=\"https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/\">Agilex 5 E-Series Premium Development Kit GSRD</a> for information about GSRD.</p><p>The design uses HPS First configuration mode.</p><h2>Baseline feature</h2><p>This reference design demonstrates the following system integration between Hard Processor System (HPS) and FPGA IPs:<ul><li>Hard Processor System (HPS) enablement and configuration</li><li> Enable dual core Arm Cortex-A76 processor</li><li>Enable dual core Arm Cortex-A55 processor</li><li>Hard Processor System enablement and configuration</li><li>HPS Peripheral and I/O (SD/MMC, EMAC, SPI, MDIO, I2C, I3C, UART, TRACE, and GPIO)</li><li>HPS Clock and Reset</li><li>HPS FPGA Bridge and Interrupt</li><li>HPS EMIF configuration</li><li>System integration with FPGA IPs</li><li>Peripheral subsystem that consists of System ID, Programmable I/O (PIO) IP for controlling DIPSW, PushButton, and LEDs</li><li>Debug subsystem that consists of JTAG-to-Avalon Master IP to allow System-Console debug activity and FPGA content access through JTAG</li><li>256KB of FPGA On-Chip Memory</li></ul></p>",
            "category": "HPS",
            "url": "https://www.github.com/altera-fpga/agilex5e-ed-gsrd",
            "downloadUrl": "a5ed065es-premium-devkit-emmc-legacy-baseline.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-ed-gsrd/releases/assets/245602296",
            "Q_GITHUB_RELEASE": "QPDS25.1_REL_GSRD_PR",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "HPS Baseline System Example Design with HPS Expansion Board for Agilex 5 FPGA E-Series 065B Premium Development Kit",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "25.1",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED013BB32AE5S",
            "description": "This is the baseline Golden Hardware Reference Design (GHRD) for Agilex 5 FPGA E-Series 065B Premium Development Kit with Out of Box Experience (OOBE) daughter card, which is also known as HPS Enablement Expansion Board.",
            "rich_description": "<p>Agilex 5 GHRD is a reference design for Intel Agilex 5 System On Chip (SoC) FPGA.</p><p>The GHRD is part of the Golden System Reference Design (GSRD), which provides a complete solution, including exercising soft IP in the fabric, booting to U-Boot, then Linux, and running sample Linux applications.\nRefer to the <a href=\"https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/\">Agilex 5 E-Series Premium Development Kit GSRD</a> for information about GSRD.</p><p>The design uses HPS First configuration mode.</p><h2>Baseline feature</h2><p>This reference design demonstrates the following system integration between Hard Processor System (HPS) and FPGA IPs:<ul><li>Hard Processor System (HPS) enablement and configuration</li><li>Enable dual core Arm Cortex-A76 processor</li><li>Enable dual core Arm Cortex-A55 processor</li><li>HPS Peripheral and I/O (SD/MMC, EMAC, MDIO, USB, I3C, JTAG, UART, and GPIO)</li><li>HPS Clock and Reset</li><li>HPS FPGA Bridge and Interrupt</li><li>HPS EMIF configuration</li><li>System integration with FPGA IPs</li><li>Peripheral subsystem that consists of System ID, Programmable I/O (PIO) IP for controlling DIPSW, PushButton, and LEDs</li><li>Debug subsystem that consists of JTAG-to-Avalon Master IP to allow System-Console debug activity and FPGA content access through JTAG</li><li>256KB of FPGA On-Chip Memory</li></ul></p>",
            "category": "HPS",
            "url": "https://www.github.com/altera-fpga/agilex5e-ed-gsrd",
            "downloadUrl": "a5ed065es-premium-devkit-oobe-legacy-baseline.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-ed-gsrd/releases/assets/245602315",
            "Q_GITHUB_RELEASE": "QPDS25.1_REL_GSRD_PR",
            "Q_VALIDATED": true
        },
        {
            "id": "-",
            "title": "HPS Baseline System Example Design with HPS Test Board for Agilex 5 FPGA E-Series 065B Premium Development Kit",
            "source": "GitHub",
            "family": "Agilex 5",
            "quartus_version": "25.1",
            "devkit": "Agilex 5 FPGA E-Series 065B Premium Development Kit DK-A5E065BB32AES1",
            "device_part": "A5ED065BB32AE6SR0",
            "description": "Baseline Golden Hardware Reference Design (GHRD) for Agilex 5 FPGA E-Series 065B Premium Development Kit with HPS Test Board.",
            "rich_description": "<p>Agilex 5 GHRD is a reference design for Intel Agilex 5 System On Chip (SoC) FPGA.</p><p>The GHRD is part of the Golden System Reference Design (GSRD), which provides a complete solution, including exercising soft IP in the fabric, booting to U-Boot, then Linux, and running sample Linux applications.\nRefer to the <a href=\"https://altera-fpga.github.io/latest/embedded-designs/agilex-5/e-series/premium/gsrd/ug-gsrd-agx5e-premium/\">Agilex 5 E-Series Premium Development Kit GSRD</a> for information about GSRD.</p><p>The design uses HPS First configuration mode.</p><h2>Baseline feature</h2><p>This reference design demonstrates the following system integration between Hard Processor System (HPS) and FPGA IPs:<ul><li>Hard Processor System (HPS) enablement and configuration</li><li>Enable dual core Arm Cortex-A76 processor</li><li>Enable dual core Arm Cortex-A55 processor</li><li>HPS Peripheral and I/O (SD/MMC, EMAC, SPI, MDIO, I3C, JTAG, UART, TRACE, and GPIO)</li><li>HPS Clock and Reset</li><li>HPS FPGA Bridge and Interrupt</li><li>HPS EMIF configuration</li><li>System integration with FPGA IPs</li><li>Peripheral subsystem that consists of System ID, Programmable I/O (PIO) IP for controlling DIPSW, PushButton, and LEDs</li><li>Debug subsystem that consists of JTAG-to-Avalon Master IP to allow System-Console debug activity and FPGA content access through JTAG</li><li>256KB of FPGA On-Chip Memory</li></ul></p>",
            "category": "HPS",
            "url": "https://www.github.com/altera-fpga/agilex5e-ed-gsrd",
            "downloadUrl": "a5ed065es-premium-devkit-debug2-legacy-baseline.zip",
            "Q_DOWNLOAD_URL": "https://api.github.com/repos/altera-fpga/agilex5e-ed-gsrd/releases/assets/245602288",
            "Q_GITHUB_RELEASE": "QPDS25.1_REL_GSRD_PR",
            "Q_VALIDATED": true
        }
    ],
    "force_always_regenerate": []
}